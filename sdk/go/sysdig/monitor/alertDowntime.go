// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package monitor

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Import
//
// Downtime Monitor alerts can be imported using the alert ID, e.g.
//
// ```sh
//  $ pulumi import sysdig:Monitor/alertDowntime:AlertDowntime example 12345
// ```
type AlertDowntime struct {
	pulumi.CustomResourceState

	// Enables the creation of a capture file of the syscalls during the event.
	Capture AlertDowntimeCapturePtrOutput `pulumi:"capture"`
	// Allows to define a custom notification title, prepend and append text.
	CustomNotification AlertDowntimeCustomNotificationPtrOutput `pulumi:"customNotification"`
	// The description of Monitor alert.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Boolean that defines if the alert is enabled or not. Defaults to true.
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// List of metrics to monitor downtime and alert on. Example: `["kubernetes.namespace.name"]` to detect namespace removal or `["host.hostName"]` to detect host downtime.
	EntitiesToMonitors pulumi.StringArrayOutput `pulumi:"entitiesToMonitors"`
	// The name of the Monitor alert. It must be unique.
	Name pulumi.StringOutput `pulumi:"name"`
	// List of notification channel IDs where an alert must be sent to once fired.
	NotificationChannels pulumi.IntArrayOutput `pulumi:"notificationChannels"`
	// Number of minutes for the alert to re-notify until the status is solved.
	RenotificationMinutes pulumi.IntPtrOutput `pulumi:"renotificationMinutes"`
	// Part of the infrastructure where the alert is valid. Defaults to the entire infrastructure.
	Scope pulumi.StringPtrOutput `pulumi:"scope"`
	// Severity of the Monitor alert. It must be a value between 0 and 7,
	// with 0 being the most critical and 7 the less critical. Defaults to 4.
	Severity pulumi.IntPtrOutput `pulumi:"severity"`
	// Team ID that owns the alert.
	Team pulumi.IntOutput `pulumi:"team"`
	// Threshold of time for the status to stabilize until the alert is fired.
	TriggerAfterMinutes pulumi.IntOutput `pulumi:"triggerAfterMinutes"`
	// Below of this percentage of downtime the alert will be triggered. Defaults to 100.
	TriggerAfterPct pulumi.IntPtrOutput `pulumi:"triggerAfterPct"`
	// Current version of the resource in Sysdig Monitor.
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewAlertDowntime registers a new resource with the given unique name, arguments, and options.
func NewAlertDowntime(ctx *pulumi.Context,
	name string, args *AlertDowntimeArgs, opts ...pulumi.ResourceOption) (*AlertDowntime, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EntitiesToMonitors == nil {
		return nil, errors.New("invalid value for required argument 'EntitiesToMonitors'")
	}
	if args.TriggerAfterMinutes == nil {
		return nil, errors.New("invalid value for required argument 'TriggerAfterMinutes'")
	}
	var resource AlertDowntime
	err := ctx.RegisterResource("sysdig:Monitor/alertDowntime:AlertDowntime", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAlertDowntime gets an existing AlertDowntime resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAlertDowntime(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AlertDowntimeState, opts ...pulumi.ResourceOption) (*AlertDowntime, error) {
	var resource AlertDowntime
	err := ctx.ReadResource("sysdig:Monitor/alertDowntime:AlertDowntime", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AlertDowntime resources.
type alertDowntimeState struct {
	// Enables the creation of a capture file of the syscalls during the event.
	Capture *AlertDowntimeCapture `pulumi:"capture"`
	// Allows to define a custom notification title, prepend and append text.
	CustomNotification *AlertDowntimeCustomNotification `pulumi:"customNotification"`
	// The description of Monitor alert.
	Description *string `pulumi:"description"`
	// Boolean that defines if the alert is enabled or not. Defaults to true.
	Enabled *bool `pulumi:"enabled"`
	// List of metrics to monitor downtime and alert on. Example: `["kubernetes.namespace.name"]` to detect namespace removal or `["host.hostName"]` to detect host downtime.
	EntitiesToMonitors []string `pulumi:"entitiesToMonitors"`
	// The name of the Monitor alert. It must be unique.
	Name *string `pulumi:"name"`
	// List of notification channel IDs where an alert must be sent to once fired.
	NotificationChannels []int `pulumi:"notificationChannels"`
	// Number of minutes for the alert to re-notify until the status is solved.
	RenotificationMinutes *int `pulumi:"renotificationMinutes"`
	// Part of the infrastructure where the alert is valid. Defaults to the entire infrastructure.
	Scope *string `pulumi:"scope"`
	// Severity of the Monitor alert. It must be a value between 0 and 7,
	// with 0 being the most critical and 7 the less critical. Defaults to 4.
	Severity *int `pulumi:"severity"`
	// Team ID that owns the alert.
	Team *int `pulumi:"team"`
	// Threshold of time for the status to stabilize until the alert is fired.
	TriggerAfterMinutes *int `pulumi:"triggerAfterMinutes"`
	// Below of this percentage of downtime the alert will be triggered. Defaults to 100.
	TriggerAfterPct *int `pulumi:"triggerAfterPct"`
	// Current version of the resource in Sysdig Monitor.
	Version *int `pulumi:"version"`
}

type AlertDowntimeState struct {
	// Enables the creation of a capture file of the syscalls during the event.
	Capture AlertDowntimeCapturePtrInput
	// Allows to define a custom notification title, prepend and append text.
	CustomNotification AlertDowntimeCustomNotificationPtrInput
	// The description of Monitor alert.
	Description pulumi.StringPtrInput
	// Boolean that defines if the alert is enabled or not. Defaults to true.
	Enabled pulumi.BoolPtrInput
	// List of metrics to monitor downtime and alert on. Example: `["kubernetes.namespace.name"]` to detect namespace removal or `["host.hostName"]` to detect host downtime.
	EntitiesToMonitors pulumi.StringArrayInput
	// The name of the Monitor alert. It must be unique.
	Name pulumi.StringPtrInput
	// List of notification channel IDs where an alert must be sent to once fired.
	NotificationChannels pulumi.IntArrayInput
	// Number of minutes for the alert to re-notify until the status is solved.
	RenotificationMinutes pulumi.IntPtrInput
	// Part of the infrastructure where the alert is valid. Defaults to the entire infrastructure.
	Scope pulumi.StringPtrInput
	// Severity of the Monitor alert. It must be a value between 0 and 7,
	// with 0 being the most critical and 7 the less critical. Defaults to 4.
	Severity pulumi.IntPtrInput
	// Team ID that owns the alert.
	Team pulumi.IntPtrInput
	// Threshold of time for the status to stabilize until the alert is fired.
	TriggerAfterMinutes pulumi.IntPtrInput
	// Below of this percentage of downtime the alert will be triggered. Defaults to 100.
	TriggerAfterPct pulumi.IntPtrInput
	// Current version of the resource in Sysdig Monitor.
	Version pulumi.IntPtrInput
}

func (AlertDowntimeState) ElementType() reflect.Type {
	return reflect.TypeOf((*alertDowntimeState)(nil)).Elem()
}

type alertDowntimeArgs struct {
	// Enables the creation of a capture file of the syscalls during the event.
	Capture *AlertDowntimeCapture `pulumi:"capture"`
	// Allows to define a custom notification title, prepend and append text.
	CustomNotification *AlertDowntimeCustomNotification `pulumi:"customNotification"`
	// The description of Monitor alert.
	Description *string `pulumi:"description"`
	// Boolean that defines if the alert is enabled or not. Defaults to true.
	Enabled *bool `pulumi:"enabled"`
	// List of metrics to monitor downtime and alert on. Example: `["kubernetes.namespace.name"]` to detect namespace removal or `["host.hostName"]` to detect host downtime.
	EntitiesToMonitors []string `pulumi:"entitiesToMonitors"`
	// The name of the Monitor alert. It must be unique.
	Name *string `pulumi:"name"`
	// List of notification channel IDs where an alert must be sent to once fired.
	NotificationChannels []int `pulumi:"notificationChannels"`
	// Number of minutes for the alert to re-notify until the status is solved.
	RenotificationMinutes *int `pulumi:"renotificationMinutes"`
	// Part of the infrastructure where the alert is valid. Defaults to the entire infrastructure.
	Scope *string `pulumi:"scope"`
	// Severity of the Monitor alert. It must be a value between 0 and 7,
	// with 0 being the most critical and 7 the less critical. Defaults to 4.
	Severity *int `pulumi:"severity"`
	// Threshold of time for the status to stabilize until the alert is fired.
	TriggerAfterMinutes int `pulumi:"triggerAfterMinutes"`
	// Below of this percentage of downtime the alert will be triggered. Defaults to 100.
	TriggerAfterPct *int `pulumi:"triggerAfterPct"`
}

// The set of arguments for constructing a AlertDowntime resource.
type AlertDowntimeArgs struct {
	// Enables the creation of a capture file of the syscalls during the event.
	Capture AlertDowntimeCapturePtrInput
	// Allows to define a custom notification title, prepend and append text.
	CustomNotification AlertDowntimeCustomNotificationPtrInput
	// The description of Monitor alert.
	Description pulumi.StringPtrInput
	// Boolean that defines if the alert is enabled or not. Defaults to true.
	Enabled pulumi.BoolPtrInput
	// List of metrics to monitor downtime and alert on. Example: `["kubernetes.namespace.name"]` to detect namespace removal or `["host.hostName"]` to detect host downtime.
	EntitiesToMonitors pulumi.StringArrayInput
	// The name of the Monitor alert. It must be unique.
	Name pulumi.StringPtrInput
	// List of notification channel IDs where an alert must be sent to once fired.
	NotificationChannels pulumi.IntArrayInput
	// Number of minutes for the alert to re-notify until the status is solved.
	RenotificationMinutes pulumi.IntPtrInput
	// Part of the infrastructure where the alert is valid. Defaults to the entire infrastructure.
	Scope pulumi.StringPtrInput
	// Severity of the Monitor alert. It must be a value between 0 and 7,
	// with 0 being the most critical and 7 the less critical. Defaults to 4.
	Severity pulumi.IntPtrInput
	// Threshold of time for the status to stabilize until the alert is fired.
	TriggerAfterMinutes pulumi.IntInput
	// Below of this percentage of downtime the alert will be triggered. Defaults to 100.
	TriggerAfterPct pulumi.IntPtrInput
}

func (AlertDowntimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*alertDowntimeArgs)(nil)).Elem()
}

type AlertDowntimeInput interface {
	pulumi.Input

	ToAlertDowntimeOutput() AlertDowntimeOutput
	ToAlertDowntimeOutputWithContext(ctx context.Context) AlertDowntimeOutput
}

func (*AlertDowntime) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertDowntime)(nil))
}

func (i *AlertDowntime) ToAlertDowntimeOutput() AlertDowntimeOutput {
	return i.ToAlertDowntimeOutputWithContext(context.Background())
}

func (i *AlertDowntime) ToAlertDowntimeOutputWithContext(ctx context.Context) AlertDowntimeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertDowntimeOutput)
}

func (i *AlertDowntime) ToAlertDowntimePtrOutput() AlertDowntimePtrOutput {
	return i.ToAlertDowntimePtrOutputWithContext(context.Background())
}

func (i *AlertDowntime) ToAlertDowntimePtrOutputWithContext(ctx context.Context) AlertDowntimePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertDowntimePtrOutput)
}

type AlertDowntimePtrInput interface {
	pulumi.Input

	ToAlertDowntimePtrOutput() AlertDowntimePtrOutput
	ToAlertDowntimePtrOutputWithContext(ctx context.Context) AlertDowntimePtrOutput
}

type alertDowntimePtrType AlertDowntimeArgs

func (*alertDowntimePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertDowntime)(nil))
}

func (i *alertDowntimePtrType) ToAlertDowntimePtrOutput() AlertDowntimePtrOutput {
	return i.ToAlertDowntimePtrOutputWithContext(context.Background())
}

func (i *alertDowntimePtrType) ToAlertDowntimePtrOutputWithContext(ctx context.Context) AlertDowntimePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertDowntimePtrOutput)
}

// AlertDowntimeArrayInput is an input type that accepts AlertDowntimeArray and AlertDowntimeArrayOutput values.
// You can construct a concrete instance of `AlertDowntimeArrayInput` via:
//
//          AlertDowntimeArray{ AlertDowntimeArgs{...} }
type AlertDowntimeArrayInput interface {
	pulumi.Input

	ToAlertDowntimeArrayOutput() AlertDowntimeArrayOutput
	ToAlertDowntimeArrayOutputWithContext(context.Context) AlertDowntimeArrayOutput
}

type AlertDowntimeArray []AlertDowntimeInput

func (AlertDowntimeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AlertDowntime)(nil)).Elem()
}

func (i AlertDowntimeArray) ToAlertDowntimeArrayOutput() AlertDowntimeArrayOutput {
	return i.ToAlertDowntimeArrayOutputWithContext(context.Background())
}

func (i AlertDowntimeArray) ToAlertDowntimeArrayOutputWithContext(ctx context.Context) AlertDowntimeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertDowntimeArrayOutput)
}

// AlertDowntimeMapInput is an input type that accepts AlertDowntimeMap and AlertDowntimeMapOutput values.
// You can construct a concrete instance of `AlertDowntimeMapInput` via:
//
//          AlertDowntimeMap{ "key": AlertDowntimeArgs{...} }
type AlertDowntimeMapInput interface {
	pulumi.Input

	ToAlertDowntimeMapOutput() AlertDowntimeMapOutput
	ToAlertDowntimeMapOutputWithContext(context.Context) AlertDowntimeMapOutput
}

type AlertDowntimeMap map[string]AlertDowntimeInput

func (AlertDowntimeMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AlertDowntime)(nil)).Elem()
}

func (i AlertDowntimeMap) ToAlertDowntimeMapOutput() AlertDowntimeMapOutput {
	return i.ToAlertDowntimeMapOutputWithContext(context.Background())
}

func (i AlertDowntimeMap) ToAlertDowntimeMapOutputWithContext(ctx context.Context) AlertDowntimeMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertDowntimeMapOutput)
}

type AlertDowntimeOutput struct{ *pulumi.OutputState }

func (AlertDowntimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertDowntime)(nil))
}

func (o AlertDowntimeOutput) ToAlertDowntimeOutput() AlertDowntimeOutput {
	return o
}

func (o AlertDowntimeOutput) ToAlertDowntimeOutputWithContext(ctx context.Context) AlertDowntimeOutput {
	return o
}

func (o AlertDowntimeOutput) ToAlertDowntimePtrOutput() AlertDowntimePtrOutput {
	return o.ToAlertDowntimePtrOutputWithContext(context.Background())
}

func (o AlertDowntimeOutput) ToAlertDowntimePtrOutputWithContext(ctx context.Context) AlertDowntimePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AlertDowntime) *AlertDowntime {
		return &v
	}).(AlertDowntimePtrOutput)
}

type AlertDowntimePtrOutput struct{ *pulumi.OutputState }

func (AlertDowntimePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertDowntime)(nil))
}

func (o AlertDowntimePtrOutput) ToAlertDowntimePtrOutput() AlertDowntimePtrOutput {
	return o
}

func (o AlertDowntimePtrOutput) ToAlertDowntimePtrOutputWithContext(ctx context.Context) AlertDowntimePtrOutput {
	return o
}

func (o AlertDowntimePtrOutput) Elem() AlertDowntimeOutput {
	return o.ApplyT(func(v *AlertDowntime) AlertDowntime {
		if v != nil {
			return *v
		}
		var ret AlertDowntime
		return ret
	}).(AlertDowntimeOutput)
}

type AlertDowntimeArrayOutput struct{ *pulumi.OutputState }

func (AlertDowntimeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertDowntime)(nil))
}

func (o AlertDowntimeArrayOutput) ToAlertDowntimeArrayOutput() AlertDowntimeArrayOutput {
	return o
}

func (o AlertDowntimeArrayOutput) ToAlertDowntimeArrayOutputWithContext(ctx context.Context) AlertDowntimeArrayOutput {
	return o
}

func (o AlertDowntimeArrayOutput) Index(i pulumi.IntInput) AlertDowntimeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlertDowntime {
		return vs[0].([]AlertDowntime)[vs[1].(int)]
	}).(AlertDowntimeOutput)
}

type AlertDowntimeMapOutput struct{ *pulumi.OutputState }

func (AlertDowntimeMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]AlertDowntime)(nil))
}

func (o AlertDowntimeMapOutput) ToAlertDowntimeMapOutput() AlertDowntimeMapOutput {
	return o
}

func (o AlertDowntimeMapOutput) ToAlertDowntimeMapOutputWithContext(ctx context.Context) AlertDowntimeMapOutput {
	return o
}

func (o AlertDowntimeMapOutput) MapIndex(k pulumi.StringInput) AlertDowntimeOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) AlertDowntime {
		return vs[0].(map[string]AlertDowntime)[vs[1].(string)]
	}).(AlertDowntimeOutput)
}

func init() {
	pulumi.RegisterOutputType(AlertDowntimeOutput{})
	pulumi.RegisterOutputType(AlertDowntimePtrOutput{})
	pulumi.RegisterOutputType(AlertDowntimeArrayOutput{})
	pulumi.RegisterOutputType(AlertDowntimeMapOutput{})
}
