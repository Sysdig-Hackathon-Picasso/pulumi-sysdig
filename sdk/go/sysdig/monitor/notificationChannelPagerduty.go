// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package monitor

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type NotificationChannelPagerduty struct {
	pulumi.CustomResourceState

	Account              pulumi.StringOutput  `pulumi:"account"`
	Enabled              pulumi.BoolPtrOutput `pulumi:"enabled"`
	Name                 pulumi.StringOutput  `pulumi:"name"`
	NotifyWhenOk         pulumi.BoolPtrOutput `pulumi:"notifyWhenOk"`
	NotifyWhenResolved   pulumi.BoolPtrOutput `pulumi:"notifyWhenResolved"`
	SendTestNotification pulumi.BoolPtrOutput `pulumi:"sendTestNotification"`
	ServiceKey           pulumi.StringOutput  `pulumi:"serviceKey"`
	ServiceName          pulumi.StringOutput  `pulumi:"serviceName"`
	Version              pulumi.IntOutput     `pulumi:"version"`
}

// NewNotificationChannelPagerduty registers a new resource with the given unique name, arguments, and options.
func NewNotificationChannelPagerduty(ctx *pulumi.Context,
	name string, args *NotificationChannelPagerdutyArgs, opts ...pulumi.ResourceOption) (*NotificationChannelPagerduty, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Account == nil {
		return nil, errors.New("invalid value for required argument 'Account'")
	}
	if args.ServiceKey == nil {
		return nil, errors.New("invalid value for required argument 'ServiceKey'")
	}
	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	var resource NotificationChannelPagerduty
	err := ctx.RegisterResource("sysdig:Monitor/notificationChannelPagerduty:NotificationChannelPagerduty", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNotificationChannelPagerduty gets an existing NotificationChannelPagerduty resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNotificationChannelPagerduty(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NotificationChannelPagerdutyState, opts ...pulumi.ResourceOption) (*NotificationChannelPagerduty, error) {
	var resource NotificationChannelPagerduty
	err := ctx.ReadResource("sysdig:Monitor/notificationChannelPagerduty:NotificationChannelPagerduty", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NotificationChannelPagerduty resources.
type notificationChannelPagerdutyState struct {
	Account              *string `pulumi:"account"`
	Enabled              *bool   `pulumi:"enabled"`
	Name                 *string `pulumi:"name"`
	NotifyWhenOk         *bool   `pulumi:"notifyWhenOk"`
	NotifyWhenResolved   *bool   `pulumi:"notifyWhenResolved"`
	SendTestNotification *bool   `pulumi:"sendTestNotification"`
	ServiceKey           *string `pulumi:"serviceKey"`
	ServiceName          *string `pulumi:"serviceName"`
	Version              *int    `pulumi:"version"`
}

type NotificationChannelPagerdutyState struct {
	Account              pulumi.StringPtrInput
	Enabled              pulumi.BoolPtrInput
	Name                 pulumi.StringPtrInput
	NotifyWhenOk         pulumi.BoolPtrInput
	NotifyWhenResolved   pulumi.BoolPtrInput
	SendTestNotification pulumi.BoolPtrInput
	ServiceKey           pulumi.StringPtrInput
	ServiceName          pulumi.StringPtrInput
	Version              pulumi.IntPtrInput
}

func (NotificationChannelPagerdutyState) ElementType() reflect.Type {
	return reflect.TypeOf((*notificationChannelPagerdutyState)(nil)).Elem()
}

type notificationChannelPagerdutyArgs struct {
	Account              string  `pulumi:"account"`
	Enabled              *bool   `pulumi:"enabled"`
	Name                 *string `pulumi:"name"`
	NotifyWhenOk         *bool   `pulumi:"notifyWhenOk"`
	NotifyWhenResolved   *bool   `pulumi:"notifyWhenResolved"`
	SendTestNotification *bool   `pulumi:"sendTestNotification"`
	ServiceKey           string  `pulumi:"serviceKey"`
	ServiceName          string  `pulumi:"serviceName"`
}

// The set of arguments for constructing a NotificationChannelPagerduty resource.
type NotificationChannelPagerdutyArgs struct {
	Account              pulumi.StringInput
	Enabled              pulumi.BoolPtrInput
	Name                 pulumi.StringPtrInput
	NotifyWhenOk         pulumi.BoolPtrInput
	NotifyWhenResolved   pulumi.BoolPtrInput
	SendTestNotification pulumi.BoolPtrInput
	ServiceKey           pulumi.StringInput
	ServiceName          pulumi.StringInput
}

func (NotificationChannelPagerdutyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*notificationChannelPagerdutyArgs)(nil)).Elem()
}

type NotificationChannelPagerdutyInput interface {
	pulumi.Input

	ToNotificationChannelPagerdutyOutput() NotificationChannelPagerdutyOutput
	ToNotificationChannelPagerdutyOutputWithContext(ctx context.Context) NotificationChannelPagerdutyOutput
}

func (*NotificationChannelPagerduty) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationChannelPagerduty)(nil))
}

func (i *NotificationChannelPagerduty) ToNotificationChannelPagerdutyOutput() NotificationChannelPagerdutyOutput {
	return i.ToNotificationChannelPagerdutyOutputWithContext(context.Background())
}

func (i *NotificationChannelPagerduty) ToNotificationChannelPagerdutyOutputWithContext(ctx context.Context) NotificationChannelPagerdutyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationChannelPagerdutyOutput)
}

func (i *NotificationChannelPagerduty) ToNotificationChannelPagerdutyPtrOutput() NotificationChannelPagerdutyPtrOutput {
	return i.ToNotificationChannelPagerdutyPtrOutputWithContext(context.Background())
}

func (i *NotificationChannelPagerduty) ToNotificationChannelPagerdutyPtrOutputWithContext(ctx context.Context) NotificationChannelPagerdutyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationChannelPagerdutyPtrOutput)
}

type NotificationChannelPagerdutyPtrInput interface {
	pulumi.Input

	ToNotificationChannelPagerdutyPtrOutput() NotificationChannelPagerdutyPtrOutput
	ToNotificationChannelPagerdutyPtrOutputWithContext(ctx context.Context) NotificationChannelPagerdutyPtrOutput
}

type notificationChannelPagerdutyPtrType NotificationChannelPagerdutyArgs

func (*notificationChannelPagerdutyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NotificationChannelPagerduty)(nil))
}

func (i *notificationChannelPagerdutyPtrType) ToNotificationChannelPagerdutyPtrOutput() NotificationChannelPagerdutyPtrOutput {
	return i.ToNotificationChannelPagerdutyPtrOutputWithContext(context.Background())
}

func (i *notificationChannelPagerdutyPtrType) ToNotificationChannelPagerdutyPtrOutputWithContext(ctx context.Context) NotificationChannelPagerdutyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationChannelPagerdutyPtrOutput)
}

// NotificationChannelPagerdutyArrayInput is an input type that accepts NotificationChannelPagerdutyArray and NotificationChannelPagerdutyArrayOutput values.
// You can construct a concrete instance of `NotificationChannelPagerdutyArrayInput` via:
//
//          NotificationChannelPagerdutyArray{ NotificationChannelPagerdutyArgs{...} }
type NotificationChannelPagerdutyArrayInput interface {
	pulumi.Input

	ToNotificationChannelPagerdutyArrayOutput() NotificationChannelPagerdutyArrayOutput
	ToNotificationChannelPagerdutyArrayOutputWithContext(context.Context) NotificationChannelPagerdutyArrayOutput
}

type NotificationChannelPagerdutyArray []NotificationChannelPagerdutyInput

func (NotificationChannelPagerdutyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NotificationChannelPagerduty)(nil)).Elem()
}

func (i NotificationChannelPagerdutyArray) ToNotificationChannelPagerdutyArrayOutput() NotificationChannelPagerdutyArrayOutput {
	return i.ToNotificationChannelPagerdutyArrayOutputWithContext(context.Background())
}

func (i NotificationChannelPagerdutyArray) ToNotificationChannelPagerdutyArrayOutputWithContext(ctx context.Context) NotificationChannelPagerdutyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationChannelPagerdutyArrayOutput)
}

// NotificationChannelPagerdutyMapInput is an input type that accepts NotificationChannelPagerdutyMap and NotificationChannelPagerdutyMapOutput values.
// You can construct a concrete instance of `NotificationChannelPagerdutyMapInput` via:
//
//          NotificationChannelPagerdutyMap{ "key": NotificationChannelPagerdutyArgs{...} }
type NotificationChannelPagerdutyMapInput interface {
	pulumi.Input

	ToNotificationChannelPagerdutyMapOutput() NotificationChannelPagerdutyMapOutput
	ToNotificationChannelPagerdutyMapOutputWithContext(context.Context) NotificationChannelPagerdutyMapOutput
}

type NotificationChannelPagerdutyMap map[string]NotificationChannelPagerdutyInput

func (NotificationChannelPagerdutyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NotificationChannelPagerduty)(nil)).Elem()
}

func (i NotificationChannelPagerdutyMap) ToNotificationChannelPagerdutyMapOutput() NotificationChannelPagerdutyMapOutput {
	return i.ToNotificationChannelPagerdutyMapOutputWithContext(context.Background())
}

func (i NotificationChannelPagerdutyMap) ToNotificationChannelPagerdutyMapOutputWithContext(ctx context.Context) NotificationChannelPagerdutyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationChannelPagerdutyMapOutput)
}

type NotificationChannelPagerdutyOutput struct{ *pulumi.OutputState }

func (NotificationChannelPagerdutyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationChannelPagerduty)(nil))
}

func (o NotificationChannelPagerdutyOutput) ToNotificationChannelPagerdutyOutput() NotificationChannelPagerdutyOutput {
	return o
}

func (o NotificationChannelPagerdutyOutput) ToNotificationChannelPagerdutyOutputWithContext(ctx context.Context) NotificationChannelPagerdutyOutput {
	return o
}

func (o NotificationChannelPagerdutyOutput) ToNotificationChannelPagerdutyPtrOutput() NotificationChannelPagerdutyPtrOutput {
	return o.ToNotificationChannelPagerdutyPtrOutputWithContext(context.Background())
}

func (o NotificationChannelPagerdutyOutput) ToNotificationChannelPagerdutyPtrOutputWithContext(ctx context.Context) NotificationChannelPagerdutyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NotificationChannelPagerduty) *NotificationChannelPagerduty {
		return &v
	}).(NotificationChannelPagerdutyPtrOutput)
}

type NotificationChannelPagerdutyPtrOutput struct{ *pulumi.OutputState }

func (NotificationChannelPagerdutyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NotificationChannelPagerduty)(nil))
}

func (o NotificationChannelPagerdutyPtrOutput) ToNotificationChannelPagerdutyPtrOutput() NotificationChannelPagerdutyPtrOutput {
	return o
}

func (o NotificationChannelPagerdutyPtrOutput) ToNotificationChannelPagerdutyPtrOutputWithContext(ctx context.Context) NotificationChannelPagerdutyPtrOutput {
	return o
}

func (o NotificationChannelPagerdutyPtrOutput) Elem() NotificationChannelPagerdutyOutput {
	return o.ApplyT(func(v *NotificationChannelPagerduty) NotificationChannelPagerduty {
		if v != nil {
			return *v
		}
		var ret NotificationChannelPagerduty
		return ret
	}).(NotificationChannelPagerdutyOutput)
}

type NotificationChannelPagerdutyArrayOutput struct{ *pulumi.OutputState }

func (NotificationChannelPagerdutyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotificationChannelPagerduty)(nil))
}

func (o NotificationChannelPagerdutyArrayOutput) ToNotificationChannelPagerdutyArrayOutput() NotificationChannelPagerdutyArrayOutput {
	return o
}

func (o NotificationChannelPagerdutyArrayOutput) ToNotificationChannelPagerdutyArrayOutputWithContext(ctx context.Context) NotificationChannelPagerdutyArrayOutput {
	return o
}

func (o NotificationChannelPagerdutyArrayOutput) Index(i pulumi.IntInput) NotificationChannelPagerdutyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NotificationChannelPagerduty {
		return vs[0].([]NotificationChannelPagerduty)[vs[1].(int)]
	}).(NotificationChannelPagerdutyOutput)
}

type NotificationChannelPagerdutyMapOutput struct{ *pulumi.OutputState }

func (NotificationChannelPagerdutyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]NotificationChannelPagerduty)(nil))
}

func (o NotificationChannelPagerdutyMapOutput) ToNotificationChannelPagerdutyMapOutput() NotificationChannelPagerdutyMapOutput {
	return o
}

func (o NotificationChannelPagerdutyMapOutput) ToNotificationChannelPagerdutyMapOutputWithContext(ctx context.Context) NotificationChannelPagerdutyMapOutput {
	return o
}

func (o NotificationChannelPagerdutyMapOutput) MapIndex(k pulumi.StringInput) NotificationChannelPagerdutyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) NotificationChannelPagerduty {
		return vs[0].(map[string]NotificationChannelPagerduty)[vs[1].(string)]
	}).(NotificationChannelPagerdutyOutput)
}

func init() {
	pulumi.RegisterOutputType(NotificationChannelPagerdutyOutput{})
	pulumi.RegisterOutputType(NotificationChannelPagerdutyPtrOutput{})
	pulumi.RegisterOutputType(NotificationChannelPagerdutyArrayOutput{})
	pulumi.RegisterOutputType(NotificationChannelPagerdutyMapOutput{})
}
