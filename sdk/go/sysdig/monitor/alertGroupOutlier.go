// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package monitor

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Import
//
// Group Outlier Monitor alerts can be imported using the alert ID, e.g.
//
// ```sh
//  $ pulumi import sysdig:Monitor/alertGroupOutlier:AlertGroupOutlier example 12345
// ```
type AlertGroupOutlier struct {
	pulumi.CustomResourceState

	// Enables the creation of a capture file of the syscalls during the event.
	Capture AlertGroupOutlierCapturePtrOutput `pulumi:"capture"`
	// Allows to define a custom notification title, prepend and append text.
	CustomNotification AlertGroupOutlierCustomNotificationPtrOutput `pulumi:"customNotification"`
	// The description of Monitor alert.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Boolean that defines if the alert is enabled or not. Defaults to true.
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// Array of metrics to monitor and alert on. Example: `["cpu.used.percent", "cpu.cores.used", "memory.bytes.used", "fs.used.percent", "thread.count", "net.request.count.in"]`.
	Monitors pulumi.StringArrayOutput `pulumi:"monitors"`
	// The name of the Monitor alert. It must be unique.
	Name pulumi.StringOutput `pulumi:"name"`
	// List of notification channel IDs where an alert must be sent to once fired.
	NotificationChannels pulumi.IntArrayOutput `pulumi:"notificationChannels"`
	// Number of minutes for the alert to re-notify until the status is solved.
	RenotificationMinutes pulumi.IntPtrOutput `pulumi:"renotificationMinutes"`
	// Part of the infrastructure where the alert is valid. Defaults to the entire infrastructure.
	Scope pulumi.StringPtrOutput `pulumi:"scope"`
	// Severity of the Monitor alert. It must be a value between 0 and 7,
	// with 0 being the most critical and 7 the less critical. Defaults to 4.
	Severity pulumi.IntPtrOutput `pulumi:"severity"`
	// Team ID that owns the alert.
	Team pulumi.IntOutput `pulumi:"team"`
	// Threshold of time for the status to stabilize until the alert is fired.
	TriggerAfterMinutes pulumi.IntOutput `pulumi:"triggerAfterMinutes"`
	// Current version of the resource in Sysdig Monitor.
	Version pulumi.IntOutput `pulumi:"version"`
}

// NewAlertGroupOutlier registers a new resource with the given unique name, arguments, and options.
func NewAlertGroupOutlier(ctx *pulumi.Context,
	name string, args *AlertGroupOutlierArgs, opts ...pulumi.ResourceOption) (*AlertGroupOutlier, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Monitors == nil {
		return nil, errors.New("invalid value for required argument 'Monitors'")
	}
	if args.TriggerAfterMinutes == nil {
		return nil, errors.New("invalid value for required argument 'TriggerAfterMinutes'")
	}
	var resource AlertGroupOutlier
	err := ctx.RegisterResource("sysdig:Monitor/alertGroupOutlier:AlertGroupOutlier", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAlertGroupOutlier gets an existing AlertGroupOutlier resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAlertGroupOutlier(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AlertGroupOutlierState, opts ...pulumi.ResourceOption) (*AlertGroupOutlier, error) {
	var resource AlertGroupOutlier
	err := ctx.ReadResource("sysdig:Monitor/alertGroupOutlier:AlertGroupOutlier", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AlertGroupOutlier resources.
type alertGroupOutlierState struct {
	// Enables the creation of a capture file of the syscalls during the event.
	Capture *AlertGroupOutlierCapture `pulumi:"capture"`
	// Allows to define a custom notification title, prepend and append text.
	CustomNotification *AlertGroupOutlierCustomNotification `pulumi:"customNotification"`
	// The description of Monitor alert.
	Description *string `pulumi:"description"`
	// Boolean that defines if the alert is enabled or not. Defaults to true.
	Enabled *bool `pulumi:"enabled"`
	// Array of metrics to monitor and alert on. Example: `["cpu.used.percent", "cpu.cores.used", "memory.bytes.used", "fs.used.percent", "thread.count", "net.request.count.in"]`.
	Monitors []string `pulumi:"monitors"`
	// The name of the Monitor alert. It must be unique.
	Name *string `pulumi:"name"`
	// List of notification channel IDs where an alert must be sent to once fired.
	NotificationChannels []int `pulumi:"notificationChannels"`
	// Number of minutes for the alert to re-notify until the status is solved.
	RenotificationMinutes *int `pulumi:"renotificationMinutes"`
	// Part of the infrastructure where the alert is valid. Defaults to the entire infrastructure.
	Scope *string `pulumi:"scope"`
	// Severity of the Monitor alert. It must be a value between 0 and 7,
	// with 0 being the most critical and 7 the less critical. Defaults to 4.
	Severity *int `pulumi:"severity"`
	// Team ID that owns the alert.
	Team *int `pulumi:"team"`
	// Threshold of time for the status to stabilize until the alert is fired.
	TriggerAfterMinutes *int `pulumi:"triggerAfterMinutes"`
	// Current version of the resource in Sysdig Monitor.
	Version *int `pulumi:"version"`
}

type AlertGroupOutlierState struct {
	// Enables the creation of a capture file of the syscalls during the event.
	Capture AlertGroupOutlierCapturePtrInput
	// Allows to define a custom notification title, prepend and append text.
	CustomNotification AlertGroupOutlierCustomNotificationPtrInput
	// The description of Monitor alert.
	Description pulumi.StringPtrInput
	// Boolean that defines if the alert is enabled or not. Defaults to true.
	Enabled pulumi.BoolPtrInput
	// Array of metrics to monitor and alert on. Example: `["cpu.used.percent", "cpu.cores.used", "memory.bytes.used", "fs.used.percent", "thread.count", "net.request.count.in"]`.
	Monitors pulumi.StringArrayInput
	// The name of the Monitor alert. It must be unique.
	Name pulumi.StringPtrInput
	// List of notification channel IDs where an alert must be sent to once fired.
	NotificationChannels pulumi.IntArrayInput
	// Number of minutes for the alert to re-notify until the status is solved.
	RenotificationMinutes pulumi.IntPtrInput
	// Part of the infrastructure where the alert is valid. Defaults to the entire infrastructure.
	Scope pulumi.StringPtrInput
	// Severity of the Monitor alert. It must be a value between 0 and 7,
	// with 0 being the most critical and 7 the less critical. Defaults to 4.
	Severity pulumi.IntPtrInput
	// Team ID that owns the alert.
	Team pulumi.IntPtrInput
	// Threshold of time for the status to stabilize until the alert is fired.
	TriggerAfterMinutes pulumi.IntPtrInput
	// Current version of the resource in Sysdig Monitor.
	Version pulumi.IntPtrInput
}

func (AlertGroupOutlierState) ElementType() reflect.Type {
	return reflect.TypeOf((*alertGroupOutlierState)(nil)).Elem()
}

type alertGroupOutlierArgs struct {
	// Enables the creation of a capture file of the syscalls during the event.
	Capture *AlertGroupOutlierCapture `pulumi:"capture"`
	// Allows to define a custom notification title, prepend and append text.
	CustomNotification *AlertGroupOutlierCustomNotification `pulumi:"customNotification"`
	// The description of Monitor alert.
	Description *string `pulumi:"description"`
	// Boolean that defines if the alert is enabled or not. Defaults to true.
	Enabled *bool `pulumi:"enabled"`
	// Array of metrics to monitor and alert on. Example: `["cpu.used.percent", "cpu.cores.used", "memory.bytes.used", "fs.used.percent", "thread.count", "net.request.count.in"]`.
	Monitors []string `pulumi:"monitors"`
	// The name of the Monitor alert. It must be unique.
	Name *string `pulumi:"name"`
	// List of notification channel IDs where an alert must be sent to once fired.
	NotificationChannels []int `pulumi:"notificationChannels"`
	// Number of minutes for the alert to re-notify until the status is solved.
	RenotificationMinutes *int `pulumi:"renotificationMinutes"`
	// Part of the infrastructure where the alert is valid. Defaults to the entire infrastructure.
	Scope *string `pulumi:"scope"`
	// Severity of the Monitor alert. It must be a value between 0 and 7,
	// with 0 being the most critical and 7 the less critical. Defaults to 4.
	Severity *int `pulumi:"severity"`
	// Threshold of time for the status to stabilize until the alert is fired.
	TriggerAfterMinutes int `pulumi:"triggerAfterMinutes"`
}

// The set of arguments for constructing a AlertGroupOutlier resource.
type AlertGroupOutlierArgs struct {
	// Enables the creation of a capture file of the syscalls during the event.
	Capture AlertGroupOutlierCapturePtrInput
	// Allows to define a custom notification title, prepend and append text.
	CustomNotification AlertGroupOutlierCustomNotificationPtrInput
	// The description of Monitor alert.
	Description pulumi.StringPtrInput
	// Boolean that defines if the alert is enabled or not. Defaults to true.
	Enabled pulumi.BoolPtrInput
	// Array of metrics to monitor and alert on. Example: `["cpu.used.percent", "cpu.cores.used", "memory.bytes.used", "fs.used.percent", "thread.count", "net.request.count.in"]`.
	Monitors pulumi.StringArrayInput
	// The name of the Monitor alert. It must be unique.
	Name pulumi.StringPtrInput
	// List of notification channel IDs where an alert must be sent to once fired.
	NotificationChannels pulumi.IntArrayInput
	// Number of minutes for the alert to re-notify until the status is solved.
	RenotificationMinutes pulumi.IntPtrInput
	// Part of the infrastructure where the alert is valid. Defaults to the entire infrastructure.
	Scope pulumi.StringPtrInput
	// Severity of the Monitor alert. It must be a value between 0 and 7,
	// with 0 being the most critical and 7 the less critical. Defaults to 4.
	Severity pulumi.IntPtrInput
	// Threshold of time for the status to stabilize until the alert is fired.
	TriggerAfterMinutes pulumi.IntInput
}

func (AlertGroupOutlierArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*alertGroupOutlierArgs)(nil)).Elem()
}

type AlertGroupOutlierInput interface {
	pulumi.Input

	ToAlertGroupOutlierOutput() AlertGroupOutlierOutput
	ToAlertGroupOutlierOutputWithContext(ctx context.Context) AlertGroupOutlierOutput
}

func (*AlertGroupOutlier) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertGroupOutlier)(nil))
}

func (i *AlertGroupOutlier) ToAlertGroupOutlierOutput() AlertGroupOutlierOutput {
	return i.ToAlertGroupOutlierOutputWithContext(context.Background())
}

func (i *AlertGroupOutlier) ToAlertGroupOutlierOutputWithContext(ctx context.Context) AlertGroupOutlierOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertGroupOutlierOutput)
}

func (i *AlertGroupOutlier) ToAlertGroupOutlierPtrOutput() AlertGroupOutlierPtrOutput {
	return i.ToAlertGroupOutlierPtrOutputWithContext(context.Background())
}

func (i *AlertGroupOutlier) ToAlertGroupOutlierPtrOutputWithContext(ctx context.Context) AlertGroupOutlierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertGroupOutlierPtrOutput)
}

type AlertGroupOutlierPtrInput interface {
	pulumi.Input

	ToAlertGroupOutlierPtrOutput() AlertGroupOutlierPtrOutput
	ToAlertGroupOutlierPtrOutputWithContext(ctx context.Context) AlertGroupOutlierPtrOutput
}

type alertGroupOutlierPtrType AlertGroupOutlierArgs

func (*alertGroupOutlierPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertGroupOutlier)(nil))
}

func (i *alertGroupOutlierPtrType) ToAlertGroupOutlierPtrOutput() AlertGroupOutlierPtrOutput {
	return i.ToAlertGroupOutlierPtrOutputWithContext(context.Background())
}

func (i *alertGroupOutlierPtrType) ToAlertGroupOutlierPtrOutputWithContext(ctx context.Context) AlertGroupOutlierPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertGroupOutlierPtrOutput)
}

// AlertGroupOutlierArrayInput is an input type that accepts AlertGroupOutlierArray and AlertGroupOutlierArrayOutput values.
// You can construct a concrete instance of `AlertGroupOutlierArrayInput` via:
//
//          AlertGroupOutlierArray{ AlertGroupOutlierArgs{...} }
type AlertGroupOutlierArrayInput interface {
	pulumi.Input

	ToAlertGroupOutlierArrayOutput() AlertGroupOutlierArrayOutput
	ToAlertGroupOutlierArrayOutputWithContext(context.Context) AlertGroupOutlierArrayOutput
}

type AlertGroupOutlierArray []AlertGroupOutlierInput

func (AlertGroupOutlierArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AlertGroupOutlier)(nil)).Elem()
}

func (i AlertGroupOutlierArray) ToAlertGroupOutlierArrayOutput() AlertGroupOutlierArrayOutput {
	return i.ToAlertGroupOutlierArrayOutputWithContext(context.Background())
}

func (i AlertGroupOutlierArray) ToAlertGroupOutlierArrayOutputWithContext(ctx context.Context) AlertGroupOutlierArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertGroupOutlierArrayOutput)
}

// AlertGroupOutlierMapInput is an input type that accepts AlertGroupOutlierMap and AlertGroupOutlierMapOutput values.
// You can construct a concrete instance of `AlertGroupOutlierMapInput` via:
//
//          AlertGroupOutlierMap{ "key": AlertGroupOutlierArgs{...} }
type AlertGroupOutlierMapInput interface {
	pulumi.Input

	ToAlertGroupOutlierMapOutput() AlertGroupOutlierMapOutput
	ToAlertGroupOutlierMapOutputWithContext(context.Context) AlertGroupOutlierMapOutput
}

type AlertGroupOutlierMap map[string]AlertGroupOutlierInput

func (AlertGroupOutlierMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AlertGroupOutlier)(nil)).Elem()
}

func (i AlertGroupOutlierMap) ToAlertGroupOutlierMapOutput() AlertGroupOutlierMapOutput {
	return i.ToAlertGroupOutlierMapOutputWithContext(context.Background())
}

func (i AlertGroupOutlierMap) ToAlertGroupOutlierMapOutputWithContext(ctx context.Context) AlertGroupOutlierMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertGroupOutlierMapOutput)
}

type AlertGroupOutlierOutput struct{ *pulumi.OutputState }

func (AlertGroupOutlierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertGroupOutlier)(nil))
}

func (o AlertGroupOutlierOutput) ToAlertGroupOutlierOutput() AlertGroupOutlierOutput {
	return o
}

func (o AlertGroupOutlierOutput) ToAlertGroupOutlierOutputWithContext(ctx context.Context) AlertGroupOutlierOutput {
	return o
}

func (o AlertGroupOutlierOutput) ToAlertGroupOutlierPtrOutput() AlertGroupOutlierPtrOutput {
	return o.ToAlertGroupOutlierPtrOutputWithContext(context.Background())
}

func (o AlertGroupOutlierOutput) ToAlertGroupOutlierPtrOutputWithContext(ctx context.Context) AlertGroupOutlierPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AlertGroupOutlier) *AlertGroupOutlier {
		return &v
	}).(AlertGroupOutlierPtrOutput)
}

type AlertGroupOutlierPtrOutput struct{ *pulumi.OutputState }

func (AlertGroupOutlierPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertGroupOutlier)(nil))
}

func (o AlertGroupOutlierPtrOutput) ToAlertGroupOutlierPtrOutput() AlertGroupOutlierPtrOutput {
	return o
}

func (o AlertGroupOutlierPtrOutput) ToAlertGroupOutlierPtrOutputWithContext(ctx context.Context) AlertGroupOutlierPtrOutput {
	return o
}

func (o AlertGroupOutlierPtrOutput) Elem() AlertGroupOutlierOutput {
	return o.ApplyT(func(v *AlertGroupOutlier) AlertGroupOutlier {
		if v != nil {
			return *v
		}
		var ret AlertGroupOutlier
		return ret
	}).(AlertGroupOutlierOutput)
}

type AlertGroupOutlierArrayOutput struct{ *pulumi.OutputState }

func (AlertGroupOutlierArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertGroupOutlier)(nil))
}

func (o AlertGroupOutlierArrayOutput) ToAlertGroupOutlierArrayOutput() AlertGroupOutlierArrayOutput {
	return o
}

func (o AlertGroupOutlierArrayOutput) ToAlertGroupOutlierArrayOutputWithContext(ctx context.Context) AlertGroupOutlierArrayOutput {
	return o
}

func (o AlertGroupOutlierArrayOutput) Index(i pulumi.IntInput) AlertGroupOutlierOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlertGroupOutlier {
		return vs[0].([]AlertGroupOutlier)[vs[1].(int)]
	}).(AlertGroupOutlierOutput)
}

type AlertGroupOutlierMapOutput struct{ *pulumi.OutputState }

func (AlertGroupOutlierMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]AlertGroupOutlier)(nil))
}

func (o AlertGroupOutlierMapOutput) ToAlertGroupOutlierMapOutput() AlertGroupOutlierMapOutput {
	return o
}

func (o AlertGroupOutlierMapOutput) ToAlertGroupOutlierMapOutputWithContext(ctx context.Context) AlertGroupOutlierMapOutput {
	return o
}

func (o AlertGroupOutlierMapOutput) MapIndex(k pulumi.StringInput) AlertGroupOutlierOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) AlertGroupOutlier {
		return vs[0].(map[string]AlertGroupOutlier)[vs[1].(string)]
	}).(AlertGroupOutlierOutput)
}

func init() {
	pulumi.RegisterOutputType(AlertGroupOutlierOutput{})
	pulumi.RegisterOutputType(AlertGroupOutlierPtrOutput{})
	pulumi.RegisterOutputType(AlertGroupOutlierArrayOutput{})
	pulumi.RegisterOutputType(AlertGroupOutlierMapOutput{})
}
