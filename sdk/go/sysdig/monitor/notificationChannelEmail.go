// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package monitor

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type NotificationChannelEmail struct {
	pulumi.CustomResourceState

	Enabled              pulumi.BoolPtrOutput     `pulumi:"enabled"`
	Name                 pulumi.StringOutput      `pulumi:"name"`
	NotifyWhenOk         pulumi.BoolPtrOutput     `pulumi:"notifyWhenOk"`
	NotifyWhenResolved   pulumi.BoolPtrOutput     `pulumi:"notifyWhenResolved"`
	Recipients           pulumi.StringArrayOutput `pulumi:"recipients"`
	SendTestNotification pulumi.BoolPtrOutput     `pulumi:"sendTestNotification"`
	Version              pulumi.IntOutput         `pulumi:"version"`
}

// NewNotificationChannelEmail registers a new resource with the given unique name, arguments, and options.
func NewNotificationChannelEmail(ctx *pulumi.Context,
	name string, args *NotificationChannelEmailArgs, opts ...pulumi.ResourceOption) (*NotificationChannelEmail, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Recipients == nil {
		return nil, errors.New("invalid value for required argument 'Recipients'")
	}
	var resource NotificationChannelEmail
	err := ctx.RegisterResource("sysdig:Monitor/notificationChannelEmail:NotificationChannelEmail", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetNotificationChannelEmail gets an existing NotificationChannelEmail resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNotificationChannelEmail(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *NotificationChannelEmailState, opts ...pulumi.ResourceOption) (*NotificationChannelEmail, error) {
	var resource NotificationChannelEmail
	err := ctx.ReadResource("sysdig:Monitor/notificationChannelEmail:NotificationChannelEmail", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering NotificationChannelEmail resources.
type notificationChannelEmailState struct {
	Enabled              *bool    `pulumi:"enabled"`
	Name                 *string  `pulumi:"name"`
	NotifyWhenOk         *bool    `pulumi:"notifyWhenOk"`
	NotifyWhenResolved   *bool    `pulumi:"notifyWhenResolved"`
	Recipients           []string `pulumi:"recipients"`
	SendTestNotification *bool    `pulumi:"sendTestNotification"`
	Version              *int     `pulumi:"version"`
}

type NotificationChannelEmailState struct {
	Enabled              pulumi.BoolPtrInput
	Name                 pulumi.StringPtrInput
	NotifyWhenOk         pulumi.BoolPtrInput
	NotifyWhenResolved   pulumi.BoolPtrInput
	Recipients           pulumi.StringArrayInput
	SendTestNotification pulumi.BoolPtrInput
	Version              pulumi.IntPtrInput
}

func (NotificationChannelEmailState) ElementType() reflect.Type {
	return reflect.TypeOf((*notificationChannelEmailState)(nil)).Elem()
}

type notificationChannelEmailArgs struct {
	Enabled              *bool    `pulumi:"enabled"`
	Name                 *string  `pulumi:"name"`
	NotifyWhenOk         *bool    `pulumi:"notifyWhenOk"`
	NotifyWhenResolved   *bool    `pulumi:"notifyWhenResolved"`
	Recipients           []string `pulumi:"recipients"`
	SendTestNotification *bool    `pulumi:"sendTestNotification"`
}

// The set of arguments for constructing a NotificationChannelEmail resource.
type NotificationChannelEmailArgs struct {
	Enabled              pulumi.BoolPtrInput
	Name                 pulumi.StringPtrInput
	NotifyWhenOk         pulumi.BoolPtrInput
	NotifyWhenResolved   pulumi.BoolPtrInput
	Recipients           pulumi.StringArrayInput
	SendTestNotification pulumi.BoolPtrInput
}

func (NotificationChannelEmailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*notificationChannelEmailArgs)(nil)).Elem()
}

type NotificationChannelEmailInput interface {
	pulumi.Input

	ToNotificationChannelEmailOutput() NotificationChannelEmailOutput
	ToNotificationChannelEmailOutputWithContext(ctx context.Context) NotificationChannelEmailOutput
}

func (*NotificationChannelEmail) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationChannelEmail)(nil))
}

func (i *NotificationChannelEmail) ToNotificationChannelEmailOutput() NotificationChannelEmailOutput {
	return i.ToNotificationChannelEmailOutputWithContext(context.Background())
}

func (i *NotificationChannelEmail) ToNotificationChannelEmailOutputWithContext(ctx context.Context) NotificationChannelEmailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationChannelEmailOutput)
}

func (i *NotificationChannelEmail) ToNotificationChannelEmailPtrOutput() NotificationChannelEmailPtrOutput {
	return i.ToNotificationChannelEmailPtrOutputWithContext(context.Background())
}

func (i *NotificationChannelEmail) ToNotificationChannelEmailPtrOutputWithContext(ctx context.Context) NotificationChannelEmailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationChannelEmailPtrOutput)
}

type NotificationChannelEmailPtrInput interface {
	pulumi.Input

	ToNotificationChannelEmailPtrOutput() NotificationChannelEmailPtrOutput
	ToNotificationChannelEmailPtrOutputWithContext(ctx context.Context) NotificationChannelEmailPtrOutput
}

type notificationChannelEmailPtrType NotificationChannelEmailArgs

func (*notificationChannelEmailPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NotificationChannelEmail)(nil))
}

func (i *notificationChannelEmailPtrType) ToNotificationChannelEmailPtrOutput() NotificationChannelEmailPtrOutput {
	return i.ToNotificationChannelEmailPtrOutputWithContext(context.Background())
}

func (i *notificationChannelEmailPtrType) ToNotificationChannelEmailPtrOutputWithContext(ctx context.Context) NotificationChannelEmailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationChannelEmailPtrOutput)
}

// NotificationChannelEmailArrayInput is an input type that accepts NotificationChannelEmailArray and NotificationChannelEmailArrayOutput values.
// You can construct a concrete instance of `NotificationChannelEmailArrayInput` via:
//
//          NotificationChannelEmailArray{ NotificationChannelEmailArgs{...} }
type NotificationChannelEmailArrayInput interface {
	pulumi.Input

	ToNotificationChannelEmailArrayOutput() NotificationChannelEmailArrayOutput
	ToNotificationChannelEmailArrayOutputWithContext(context.Context) NotificationChannelEmailArrayOutput
}

type NotificationChannelEmailArray []NotificationChannelEmailInput

func (NotificationChannelEmailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*NotificationChannelEmail)(nil)).Elem()
}

func (i NotificationChannelEmailArray) ToNotificationChannelEmailArrayOutput() NotificationChannelEmailArrayOutput {
	return i.ToNotificationChannelEmailArrayOutputWithContext(context.Background())
}

func (i NotificationChannelEmailArray) ToNotificationChannelEmailArrayOutputWithContext(ctx context.Context) NotificationChannelEmailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationChannelEmailArrayOutput)
}

// NotificationChannelEmailMapInput is an input type that accepts NotificationChannelEmailMap and NotificationChannelEmailMapOutput values.
// You can construct a concrete instance of `NotificationChannelEmailMapInput` via:
//
//          NotificationChannelEmailMap{ "key": NotificationChannelEmailArgs{...} }
type NotificationChannelEmailMapInput interface {
	pulumi.Input

	ToNotificationChannelEmailMapOutput() NotificationChannelEmailMapOutput
	ToNotificationChannelEmailMapOutputWithContext(context.Context) NotificationChannelEmailMapOutput
}

type NotificationChannelEmailMap map[string]NotificationChannelEmailInput

func (NotificationChannelEmailMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*NotificationChannelEmail)(nil)).Elem()
}

func (i NotificationChannelEmailMap) ToNotificationChannelEmailMapOutput() NotificationChannelEmailMapOutput {
	return i.ToNotificationChannelEmailMapOutputWithContext(context.Background())
}

func (i NotificationChannelEmailMap) ToNotificationChannelEmailMapOutputWithContext(ctx context.Context) NotificationChannelEmailMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationChannelEmailMapOutput)
}

type NotificationChannelEmailOutput struct{ *pulumi.OutputState }

func (NotificationChannelEmailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationChannelEmail)(nil))
}

func (o NotificationChannelEmailOutput) ToNotificationChannelEmailOutput() NotificationChannelEmailOutput {
	return o
}

func (o NotificationChannelEmailOutput) ToNotificationChannelEmailOutputWithContext(ctx context.Context) NotificationChannelEmailOutput {
	return o
}

func (o NotificationChannelEmailOutput) ToNotificationChannelEmailPtrOutput() NotificationChannelEmailPtrOutput {
	return o.ToNotificationChannelEmailPtrOutputWithContext(context.Background())
}

func (o NotificationChannelEmailOutput) ToNotificationChannelEmailPtrOutputWithContext(ctx context.Context) NotificationChannelEmailPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NotificationChannelEmail) *NotificationChannelEmail {
		return &v
	}).(NotificationChannelEmailPtrOutput)
}

type NotificationChannelEmailPtrOutput struct{ *pulumi.OutputState }

func (NotificationChannelEmailPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NotificationChannelEmail)(nil))
}

func (o NotificationChannelEmailPtrOutput) ToNotificationChannelEmailPtrOutput() NotificationChannelEmailPtrOutput {
	return o
}

func (o NotificationChannelEmailPtrOutput) ToNotificationChannelEmailPtrOutputWithContext(ctx context.Context) NotificationChannelEmailPtrOutput {
	return o
}

func (o NotificationChannelEmailPtrOutput) Elem() NotificationChannelEmailOutput {
	return o.ApplyT(func(v *NotificationChannelEmail) NotificationChannelEmail {
		if v != nil {
			return *v
		}
		var ret NotificationChannelEmail
		return ret
	}).(NotificationChannelEmailOutput)
}

type NotificationChannelEmailArrayOutput struct{ *pulumi.OutputState }

func (NotificationChannelEmailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotificationChannelEmail)(nil))
}

func (o NotificationChannelEmailArrayOutput) ToNotificationChannelEmailArrayOutput() NotificationChannelEmailArrayOutput {
	return o
}

func (o NotificationChannelEmailArrayOutput) ToNotificationChannelEmailArrayOutputWithContext(ctx context.Context) NotificationChannelEmailArrayOutput {
	return o
}

func (o NotificationChannelEmailArrayOutput) Index(i pulumi.IntInput) NotificationChannelEmailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NotificationChannelEmail {
		return vs[0].([]NotificationChannelEmail)[vs[1].(int)]
	}).(NotificationChannelEmailOutput)
}

type NotificationChannelEmailMapOutput struct{ *pulumi.OutputState }

func (NotificationChannelEmailMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]NotificationChannelEmail)(nil))
}

func (o NotificationChannelEmailMapOutput) ToNotificationChannelEmailMapOutput() NotificationChannelEmailMapOutput {
	return o
}

func (o NotificationChannelEmailMapOutput) ToNotificationChannelEmailMapOutputWithContext(ctx context.Context) NotificationChannelEmailMapOutput {
	return o
}

func (o NotificationChannelEmailMapOutput) MapIndex(k pulumi.StringInput) NotificationChannelEmailOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) NotificationChannelEmail {
		return vs[0].(map[string]NotificationChannelEmail)[vs[1].(string)]
	}).(NotificationChannelEmailOutput)
}

func init() {
	pulumi.RegisterOutputType(NotificationChannelEmailOutput{})
	pulumi.RegisterOutputType(NotificationChannelEmailPtrOutput{})
	pulumi.RegisterOutputType(NotificationChannelEmailArrayOutput{})
	pulumi.RegisterOutputType(NotificationChannelEmailMapOutput{})
}
