// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package secure

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type VulnerabilityExceptionList struct {
	pulumi.CustomResourceState

	Description pulumi.StringPtrOutput `pulumi:"description"`
	Name        pulumi.StringOutput    `pulumi:"name"`
}

// NewVulnerabilityExceptionList registers a new resource with the given unique name, arguments, and options.
func NewVulnerabilityExceptionList(ctx *pulumi.Context,
	name string, args *VulnerabilityExceptionListArgs, opts ...pulumi.ResourceOption) (*VulnerabilityExceptionList, error) {
	if args == nil {
		args = &VulnerabilityExceptionListArgs{}
	}

	var resource VulnerabilityExceptionList
	err := ctx.RegisterResource("sysdig:Secure/vulnerabilityExceptionList:VulnerabilityExceptionList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVulnerabilityExceptionList gets an existing VulnerabilityExceptionList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVulnerabilityExceptionList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VulnerabilityExceptionListState, opts ...pulumi.ResourceOption) (*VulnerabilityExceptionList, error) {
	var resource VulnerabilityExceptionList
	err := ctx.ReadResource("sysdig:Secure/vulnerabilityExceptionList:VulnerabilityExceptionList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VulnerabilityExceptionList resources.
type vulnerabilityExceptionListState struct {
	Description *string `pulumi:"description"`
	Name        *string `pulumi:"name"`
}

type VulnerabilityExceptionListState struct {
	Description pulumi.StringPtrInput
	Name        pulumi.StringPtrInput
}

func (VulnerabilityExceptionListState) ElementType() reflect.Type {
	return reflect.TypeOf((*vulnerabilityExceptionListState)(nil)).Elem()
}

type vulnerabilityExceptionListArgs struct {
	Description *string `pulumi:"description"`
	Name        *string `pulumi:"name"`
}

// The set of arguments for constructing a VulnerabilityExceptionList resource.
type VulnerabilityExceptionListArgs struct {
	Description pulumi.StringPtrInput
	Name        pulumi.StringPtrInput
}

func (VulnerabilityExceptionListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vulnerabilityExceptionListArgs)(nil)).Elem()
}

type VulnerabilityExceptionListInput interface {
	pulumi.Input

	ToVulnerabilityExceptionListOutput() VulnerabilityExceptionListOutput
	ToVulnerabilityExceptionListOutputWithContext(ctx context.Context) VulnerabilityExceptionListOutput
}

func (*VulnerabilityExceptionList) ElementType() reflect.Type {
	return reflect.TypeOf((*VulnerabilityExceptionList)(nil))
}

func (i *VulnerabilityExceptionList) ToVulnerabilityExceptionListOutput() VulnerabilityExceptionListOutput {
	return i.ToVulnerabilityExceptionListOutputWithContext(context.Background())
}

func (i *VulnerabilityExceptionList) ToVulnerabilityExceptionListOutputWithContext(ctx context.Context) VulnerabilityExceptionListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VulnerabilityExceptionListOutput)
}

func (i *VulnerabilityExceptionList) ToVulnerabilityExceptionListPtrOutput() VulnerabilityExceptionListPtrOutput {
	return i.ToVulnerabilityExceptionListPtrOutputWithContext(context.Background())
}

func (i *VulnerabilityExceptionList) ToVulnerabilityExceptionListPtrOutputWithContext(ctx context.Context) VulnerabilityExceptionListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VulnerabilityExceptionListPtrOutput)
}

type VulnerabilityExceptionListPtrInput interface {
	pulumi.Input

	ToVulnerabilityExceptionListPtrOutput() VulnerabilityExceptionListPtrOutput
	ToVulnerabilityExceptionListPtrOutputWithContext(ctx context.Context) VulnerabilityExceptionListPtrOutput
}

type vulnerabilityExceptionListPtrType VulnerabilityExceptionListArgs

func (*vulnerabilityExceptionListPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VulnerabilityExceptionList)(nil))
}

func (i *vulnerabilityExceptionListPtrType) ToVulnerabilityExceptionListPtrOutput() VulnerabilityExceptionListPtrOutput {
	return i.ToVulnerabilityExceptionListPtrOutputWithContext(context.Background())
}

func (i *vulnerabilityExceptionListPtrType) ToVulnerabilityExceptionListPtrOutputWithContext(ctx context.Context) VulnerabilityExceptionListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VulnerabilityExceptionListPtrOutput)
}

// VulnerabilityExceptionListArrayInput is an input type that accepts VulnerabilityExceptionListArray and VulnerabilityExceptionListArrayOutput values.
// You can construct a concrete instance of `VulnerabilityExceptionListArrayInput` via:
//
//          VulnerabilityExceptionListArray{ VulnerabilityExceptionListArgs{...} }
type VulnerabilityExceptionListArrayInput interface {
	pulumi.Input

	ToVulnerabilityExceptionListArrayOutput() VulnerabilityExceptionListArrayOutput
	ToVulnerabilityExceptionListArrayOutputWithContext(context.Context) VulnerabilityExceptionListArrayOutput
}

type VulnerabilityExceptionListArray []VulnerabilityExceptionListInput

func (VulnerabilityExceptionListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VulnerabilityExceptionList)(nil)).Elem()
}

func (i VulnerabilityExceptionListArray) ToVulnerabilityExceptionListArrayOutput() VulnerabilityExceptionListArrayOutput {
	return i.ToVulnerabilityExceptionListArrayOutputWithContext(context.Background())
}

func (i VulnerabilityExceptionListArray) ToVulnerabilityExceptionListArrayOutputWithContext(ctx context.Context) VulnerabilityExceptionListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VulnerabilityExceptionListArrayOutput)
}

// VulnerabilityExceptionListMapInput is an input type that accepts VulnerabilityExceptionListMap and VulnerabilityExceptionListMapOutput values.
// You can construct a concrete instance of `VulnerabilityExceptionListMapInput` via:
//
//          VulnerabilityExceptionListMap{ "key": VulnerabilityExceptionListArgs{...} }
type VulnerabilityExceptionListMapInput interface {
	pulumi.Input

	ToVulnerabilityExceptionListMapOutput() VulnerabilityExceptionListMapOutput
	ToVulnerabilityExceptionListMapOutputWithContext(context.Context) VulnerabilityExceptionListMapOutput
}

type VulnerabilityExceptionListMap map[string]VulnerabilityExceptionListInput

func (VulnerabilityExceptionListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VulnerabilityExceptionList)(nil)).Elem()
}

func (i VulnerabilityExceptionListMap) ToVulnerabilityExceptionListMapOutput() VulnerabilityExceptionListMapOutput {
	return i.ToVulnerabilityExceptionListMapOutputWithContext(context.Background())
}

func (i VulnerabilityExceptionListMap) ToVulnerabilityExceptionListMapOutputWithContext(ctx context.Context) VulnerabilityExceptionListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VulnerabilityExceptionListMapOutput)
}

type VulnerabilityExceptionListOutput struct{ *pulumi.OutputState }

func (VulnerabilityExceptionListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VulnerabilityExceptionList)(nil))
}

func (o VulnerabilityExceptionListOutput) ToVulnerabilityExceptionListOutput() VulnerabilityExceptionListOutput {
	return o
}

func (o VulnerabilityExceptionListOutput) ToVulnerabilityExceptionListOutputWithContext(ctx context.Context) VulnerabilityExceptionListOutput {
	return o
}

func (o VulnerabilityExceptionListOutput) ToVulnerabilityExceptionListPtrOutput() VulnerabilityExceptionListPtrOutput {
	return o.ToVulnerabilityExceptionListPtrOutputWithContext(context.Background())
}

func (o VulnerabilityExceptionListOutput) ToVulnerabilityExceptionListPtrOutputWithContext(ctx context.Context) VulnerabilityExceptionListPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VulnerabilityExceptionList) *VulnerabilityExceptionList {
		return &v
	}).(VulnerabilityExceptionListPtrOutput)
}

type VulnerabilityExceptionListPtrOutput struct{ *pulumi.OutputState }

func (VulnerabilityExceptionListPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VulnerabilityExceptionList)(nil))
}

func (o VulnerabilityExceptionListPtrOutput) ToVulnerabilityExceptionListPtrOutput() VulnerabilityExceptionListPtrOutput {
	return o
}

func (o VulnerabilityExceptionListPtrOutput) ToVulnerabilityExceptionListPtrOutputWithContext(ctx context.Context) VulnerabilityExceptionListPtrOutput {
	return o
}

func (o VulnerabilityExceptionListPtrOutput) Elem() VulnerabilityExceptionListOutput {
	return o.ApplyT(func(v *VulnerabilityExceptionList) VulnerabilityExceptionList {
		if v != nil {
			return *v
		}
		var ret VulnerabilityExceptionList
		return ret
	}).(VulnerabilityExceptionListOutput)
}

type VulnerabilityExceptionListArrayOutput struct{ *pulumi.OutputState }

func (VulnerabilityExceptionListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]VulnerabilityExceptionList)(nil))
}

func (o VulnerabilityExceptionListArrayOutput) ToVulnerabilityExceptionListArrayOutput() VulnerabilityExceptionListArrayOutput {
	return o
}

func (o VulnerabilityExceptionListArrayOutput) ToVulnerabilityExceptionListArrayOutputWithContext(ctx context.Context) VulnerabilityExceptionListArrayOutput {
	return o
}

func (o VulnerabilityExceptionListArrayOutput) Index(i pulumi.IntInput) VulnerabilityExceptionListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) VulnerabilityExceptionList {
		return vs[0].([]VulnerabilityExceptionList)[vs[1].(int)]
	}).(VulnerabilityExceptionListOutput)
}

type VulnerabilityExceptionListMapOutput struct{ *pulumi.OutputState }

func (VulnerabilityExceptionListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]VulnerabilityExceptionList)(nil))
}

func (o VulnerabilityExceptionListMapOutput) ToVulnerabilityExceptionListMapOutput() VulnerabilityExceptionListMapOutput {
	return o
}

func (o VulnerabilityExceptionListMapOutput) ToVulnerabilityExceptionListMapOutputWithContext(ctx context.Context) VulnerabilityExceptionListMapOutput {
	return o
}

func (o VulnerabilityExceptionListMapOutput) MapIndex(k pulumi.StringInput) VulnerabilityExceptionListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) VulnerabilityExceptionList {
		return vs[0].(map[string]VulnerabilityExceptionList)[vs[1].(string)]
	}).(VulnerabilityExceptionListOutput)
}

func init() {
	pulumi.RegisterOutputType(VulnerabilityExceptionListOutput{})
	pulumi.RegisterOutputType(VulnerabilityExceptionListPtrOutput{})
	pulumi.RegisterOutputType(VulnerabilityExceptionListArrayOutput{})
	pulumi.RegisterOutputType(VulnerabilityExceptionListMapOutput{})
}
