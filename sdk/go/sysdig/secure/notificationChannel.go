// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package secure

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func NotificationChannel(ctx *pulumi.Context, args *NotificationChannelArgs, opts ...pulumi.InvokeOption) (*NotificationChannelResult, error) {
	var rv NotificationChannelResult
	err := ctx.Invoke("sysdig:Secure/notificationChannel:NotificationChannel", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking NotificationChannel.
type NotificationChannelArgs struct {
	Name string `pulumi:"name"`
}

// A collection of values returned by NotificationChannel.
type NotificationChannelResult struct {
	Account string `pulumi:"account"`
	ApiKey  string `pulumi:"apiKey"`
	Channel string `pulumi:"channel"`
	Enabled bool   `pulumi:"enabled"`
	// The provider-assigned unique ID for this managed resource.
	Id                   string `pulumi:"id"`
	Name                 string `pulumi:"name"`
	NotifyWhenOk         bool   `pulumi:"notifyWhenOk"`
	NotifyWhenResolved   bool   `pulumi:"notifyWhenResolved"`
	Recipients           string `pulumi:"recipients"`
	RoutingKey           string `pulumi:"routingKey"`
	SendTestNotification bool   `pulumi:"sendTestNotification"`
	ServiceKey           string `pulumi:"serviceKey"`
	ServiceName          string `pulumi:"serviceName"`
	Topics               string `pulumi:"topics"`
	Type                 string `pulumi:"type"`
	Url                  string `pulumi:"url"`
	Version              int    `pulumi:"version"`
}

func NotificationChannelOutput(ctx *pulumi.Context, args NotificationChannelOutputArgs, opts ...pulumi.InvokeOption) NotificationChannelResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (NotificationChannelResult, error) {
			args := v.(NotificationChannelArgs)
			r, err := NotificationChannel(ctx, &args, opts...)
			return *r, err
		}).(NotificationChannelResultOutput)
}

// A collection of arguments for invoking NotificationChannel.
type NotificationChannelOutputArgs struct {
	Name pulumi.StringInput `pulumi:"name"`
}

func (NotificationChannelOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationChannelArgs)(nil)).Elem()
}

// A collection of values returned by NotificationChannel.
type NotificationChannelResultOutput struct{ *pulumi.OutputState }

func (NotificationChannelResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationChannelResult)(nil)).Elem()
}

func (o NotificationChannelResultOutput) ToNotificationChannelResultOutput() NotificationChannelResultOutput {
	return o
}

func (o NotificationChannelResultOutput) ToNotificationChannelResultOutputWithContext(ctx context.Context) NotificationChannelResultOutput {
	return o
}

func (o NotificationChannelResultOutput) Account() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationChannelResult) string { return v.Account }).(pulumi.StringOutput)
}

func (o NotificationChannelResultOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationChannelResult) string { return v.ApiKey }).(pulumi.StringOutput)
}

func (o NotificationChannelResultOutput) Channel() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationChannelResult) string { return v.Channel }).(pulumi.StringOutput)
}

func (o NotificationChannelResultOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v NotificationChannelResult) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o NotificationChannelResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationChannelResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o NotificationChannelResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationChannelResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o NotificationChannelResultOutput) NotifyWhenOk() pulumi.BoolOutput {
	return o.ApplyT(func(v NotificationChannelResult) bool { return v.NotifyWhenOk }).(pulumi.BoolOutput)
}

func (o NotificationChannelResultOutput) NotifyWhenResolved() pulumi.BoolOutput {
	return o.ApplyT(func(v NotificationChannelResult) bool { return v.NotifyWhenResolved }).(pulumi.BoolOutput)
}

func (o NotificationChannelResultOutput) Recipients() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationChannelResult) string { return v.Recipients }).(pulumi.StringOutput)
}

func (o NotificationChannelResultOutput) RoutingKey() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationChannelResult) string { return v.RoutingKey }).(pulumi.StringOutput)
}

func (o NotificationChannelResultOutput) SendTestNotification() pulumi.BoolOutput {
	return o.ApplyT(func(v NotificationChannelResult) bool { return v.SendTestNotification }).(pulumi.BoolOutput)
}

func (o NotificationChannelResultOutput) ServiceKey() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationChannelResult) string { return v.ServiceKey }).(pulumi.StringOutput)
}

func (o NotificationChannelResultOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationChannelResult) string { return v.ServiceName }).(pulumi.StringOutput)
}

func (o NotificationChannelResultOutput) Topics() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationChannelResult) string { return v.Topics }).(pulumi.StringOutput)
}

func (o NotificationChannelResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationChannelResult) string { return v.Type }).(pulumi.StringOutput)
}

func (o NotificationChannelResultOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationChannelResult) string { return v.Url }).(pulumi.StringOutput)
}

func (o NotificationChannelResultOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v NotificationChannelResult) int { return v.Version }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(NotificationChannelResultOutput{})
}
