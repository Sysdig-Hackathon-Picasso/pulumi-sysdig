// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";

export namespace Monitor {
    export interface AlertAnomalyCapture {
        duration: pulumi.Input<number>;
        filename: pulumi.Input<string>;
        filter?: pulumi.Input<string>;
    }

    export interface AlertAnomalyCustomNotification {
        append?: pulumi.Input<string>;
        prepend?: pulumi.Input<string>;
        title: pulumi.Input<string>;
    }

    export interface AlertDashboardPanel {
        autosizeText?: pulumi.Input<boolean>;
        content?: pulumi.Input<string>;
        description?: pulumi.Input<string>;
        height: pulumi.Input<number>;
        name: pulumi.Input<string>;
        posX: pulumi.Input<number>;
        posY: pulumi.Input<number>;
        queries?: pulumi.Input<pulumi.Input<inputs.Monitor.AlertDashboardPanelQuery>[]>;
        transparentBackground?: pulumi.Input<boolean>;
        type: pulumi.Input<string>;
        visibleTitle?: pulumi.Input<boolean>;
        width: pulumi.Input<number>;
    }

    export interface AlertDashboardPanelQuery {
        promql: pulumi.Input<string>;
        unit: pulumi.Input<string>;
    }

    export interface AlertDashboardScope {
        comparator?: pulumi.Input<string>;
        metric: pulumi.Input<string>;
        values?: pulumi.Input<pulumi.Input<string>[]>;
        variable?: pulumi.Input<string>;
    }

    export interface AlertDowntimeCapture {
        duration: pulumi.Input<number>;
        filename: pulumi.Input<string>;
        filter?: pulumi.Input<string>;
    }

    export interface AlertDowntimeCustomNotification {
        append?: pulumi.Input<string>;
        prepend?: pulumi.Input<string>;
        title: pulumi.Input<string>;
    }

    export interface AlertEventCapture {
        duration: pulumi.Input<number>;
        filename: pulumi.Input<string>;
        filter?: pulumi.Input<string>;
    }

    export interface AlertEventCustomNotification {
        append?: pulumi.Input<string>;
        prepend?: pulumi.Input<string>;
        title: pulumi.Input<string>;
    }

    export interface GroupOutlierCapture {
        duration: pulumi.Input<number>;
        filename: pulumi.Input<string>;
        filter?: pulumi.Input<string>;
    }

    export interface GroupOutlierCustomNotification {
        append?: pulumi.Input<string>;
        prepend?: pulumi.Input<string>;
        title: pulumi.Input<string>;
    }

    export interface MetricCapture {
        duration: pulumi.Input<number>;
        filename: pulumi.Input<string>;
        filter?: pulumi.Input<string>;
    }

    export interface MetricCustomNotification {
        append?: pulumi.Input<string>;
        prepend?: pulumi.Input<string>;
        title: pulumi.Input<string>;
    }

    export interface PromqlCapture {
        duration: pulumi.Input<number>;
        filename: pulumi.Input<string>;
        filter?: pulumi.Input<string>;
    }

    export interface PromqlCustomNotification {
        append?: pulumi.Input<string>;
        prepend?: pulumi.Input<string>;
        title: pulumi.Input<string>;
    }

    export interface TeamEntrypoint {
        selection?: pulumi.Input<string>;
        type: pulumi.Input<string>;
    }

    export interface TeamUserRole {
        email: pulumi.Input<string>;
        role?: pulumi.Input<string>;
    }
}

export namespace Secure {
    export interface PolicyAction {
        captures?: pulumi.Input<pulumi.Input<inputs.Secure.PolicyActionCapture>[]>;
        container?: pulumi.Input<string>;
    }

    export interface PolicyActionCapture {
        secondsAfterEvent: pulumi.Input<number>;
        secondsBeforeEvent: pulumi.Input<number>;
    }

    export interface RuleFalcoException {
        comps: pulumi.Input<pulumi.Input<string>[]>;
        fields: pulumi.Input<pulumi.Input<string>[]>;
        name: pulumi.Input<string>;
        values: pulumi.Input<string>;
    }

    export interface RuleFilesystemReadOnly {
        matching?: pulumi.Input<boolean>;
        paths: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface RuleFilesystemReadWrite {
        matching?: pulumi.Input<boolean>;
        paths: pulumi.Input<pulumi.Input<string>[]>;
    }

    export interface RuleNetworkTcp {
        matching?: pulumi.Input<boolean>;
        ports: pulumi.Input<pulumi.Input<number>[]>;
    }

    export interface RuleNetworkUdp {
        matching?: pulumi.Input<boolean>;
        ports: pulumi.Input<pulumi.Input<number>[]>;
    }

    export interface TeamUserRole {
        email: pulumi.Input<string>;
        role?: pulumi.Input<string>;
    }
}
