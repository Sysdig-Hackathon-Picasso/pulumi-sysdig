// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class VulnerabilityException extends pulumi.CustomResource {
    /**
     * Get an existing VulnerabilityException resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VulnerabilityExceptionState, opts?: pulumi.CustomResourceOptions): VulnerabilityException {
        return new VulnerabilityException(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sysdig:Secure/vulnerabilityException:VulnerabilityException';

    /**
     * Returns true if the given object is an instance of VulnerabilityException.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VulnerabilityException {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VulnerabilityException.__pulumiType;
    }

    public readonly cve!: pulumi.Output<string>;
    public readonly enabled!: pulumi.Output<boolean | undefined>;
    public readonly expirationDate!: pulumi.Output<number | undefined>;
    public readonly listId!: pulumi.Output<string>;
    public readonly notes!: pulumi.Output<string | undefined>;

    /**
     * Create a VulnerabilityException resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VulnerabilityExceptionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VulnerabilityExceptionArgs | VulnerabilityExceptionState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VulnerabilityExceptionState | undefined;
            inputs["cve"] = state ? state.cve : undefined;
            inputs["enabled"] = state ? state.enabled : undefined;
            inputs["expirationDate"] = state ? state.expirationDate : undefined;
            inputs["listId"] = state ? state.listId : undefined;
            inputs["notes"] = state ? state.notes : undefined;
        } else {
            const args = argsOrState as VulnerabilityExceptionArgs | undefined;
            if ((!args || args.cve === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cve'");
            }
            if ((!args || args.listId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'listId'");
            }
            inputs["cve"] = args ? args.cve : undefined;
            inputs["enabled"] = args ? args.enabled : undefined;
            inputs["expirationDate"] = args ? args.expirationDate : undefined;
            inputs["listId"] = args ? args.listId : undefined;
            inputs["notes"] = args ? args.notes : undefined;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(VulnerabilityException.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering VulnerabilityException resources.
 */
export interface VulnerabilityExceptionState {
    cve?: pulumi.Input<string>;
    enabled?: pulumi.Input<boolean>;
    expirationDate?: pulumi.Input<number>;
    listId?: pulumi.Input<string>;
    notes?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a VulnerabilityException resource.
 */
export interface VulnerabilityExceptionArgs {
    cve: pulumi.Input<string>;
    enabled?: pulumi.Input<boolean>;
    expirationDate?: pulumi.Input<number>;
    listId: pulumi.Input<string>;
    notes?: pulumi.Input<string>;
}
