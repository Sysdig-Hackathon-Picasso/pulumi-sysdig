// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class BenchmarkTask extends pulumi.CustomResource {
    /**
     * Get an existing BenchmarkTask resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BenchmarkTaskState, opts?: pulumi.CustomResourceOptions): BenchmarkTask {
        return new BenchmarkTask(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sysdig:Secure/benchmarkTask:BenchmarkTask';

    /**
     * Returns true if the given object is an instance of BenchmarkTask.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BenchmarkTask {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BenchmarkTask.__pulumiType;
    }

    public readonly enabled!: pulumi.Output<boolean | undefined>;
    public /*out*/ readonly id!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly schedule!: pulumi.Output<string>;
    public readonly schema!: pulumi.Output<string>;
    public readonly scope!: pulumi.Output<string>;

    /**
     * Create a BenchmarkTask resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BenchmarkTaskArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BenchmarkTaskArgs | BenchmarkTaskState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BenchmarkTaskState | undefined;
            inputs["enabled"] = state ? state.enabled : undefined;
            inputs["id"] = state ? state.id : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["schedule"] = state ? state.schedule : undefined;
            inputs["schema"] = state ? state.schema : undefined;
            inputs["scope"] = state ? state.scope : undefined;
        } else {
            const args = argsOrState as BenchmarkTaskArgs | undefined;
            if ((!args || args.schedule === undefined) && !opts.urn) {
                throw new Error("Missing required property 'schedule'");
            }
            if ((!args || args.schema === undefined) && !opts.urn) {
                throw new Error("Missing required property 'schema'");
            }
            if ((!args || args.scope === undefined) && !opts.urn) {
                throw new Error("Missing required property 'scope'");
            }
            inputs["enabled"] = args ? args.enabled : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["schedule"] = args ? args.schedule : undefined;
            inputs["schema"] = args ? args.schema : undefined;
            inputs["scope"] = args ? args.scope : undefined;
            inputs["id"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(BenchmarkTask.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering BenchmarkTask resources.
 */
export interface BenchmarkTaskState {
    enabled?: pulumi.Input<boolean>;
    id?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    schedule?: pulumi.Input<string>;
    schema?: pulumi.Input<string>;
    scope?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a BenchmarkTask resource.
 */
export interface BenchmarkTaskArgs {
    enabled?: pulumi.Input<boolean>;
    name?: pulumi.Input<string>;
    schedule: pulumi.Input<string>;
    schema: pulumi.Input<string>;
    scope: pulumi.Input<string>;
}
