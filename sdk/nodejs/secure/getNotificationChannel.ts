// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export function getNotificationChannel(args: GetNotificationChannelArgs, opts?: pulumi.InvokeOptions): Promise<GetNotificationChannelResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("sysdig:Secure/getNotificationChannel:GetNotificationChannel", {
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking GetNotificationChannel.
 */
export interface GetNotificationChannelArgs {
    name: string;
}

/**
 * A collection of values returned by GetNotificationChannel.
 */
export interface GetNotificationChannelResult {
    readonly account: string;
    readonly apiKey: string;
    readonly channel: string;
    readonly enabled: boolean;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name: string;
    readonly notifyWhenOk: boolean;
    readonly notifyWhenResolved: boolean;
    readonly recipients: string;
    readonly routingKey: string;
    readonly sendTestNotification: boolean;
    readonly serviceKey: string;
    readonly serviceName: string;
    readonly topics: string;
    readonly type: string;
    readonly url: string;
    readonly version: number;
}

export function getNotificationChannelOutput(args: GetNotificationChannelOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetNotificationChannelResult> {
    return pulumi.output(args).apply(a => getNotificationChannel(a, opts))
}

/**
 * A collection of arguments for invoking GetNotificationChannel.
 */
export interface GetNotificationChannelOutputArgs {
    name: pulumi.Input<string>;
}
