// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * ## Import
 *
 * Secure Cloud Accounts can be imported using the `account_id`, e.g.
 *
 * ```sh
 *  $ pulumi import sysdig:Secure/cloudAccount:CloudAccount sample 123456789012
 * ```
 */
export class CloudAccount extends pulumi.CustomResource {
    /**
     * Get an existing CloudAccount resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CloudAccountState, opts?: pulumi.CustomResourceOptions): CloudAccount {
        return new CloudAccount(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'sysdig:Secure/cloudAccount:CloudAccount';

    /**
     * Returns true if the given object is an instance of CloudAccount.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CloudAccount {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CloudAccount.__pulumiType;
    }

    /**
     * The unique identifier of the cloud account. e.g. for AWS: `123456789012`,
     */
    public readonly accountId!: pulumi.Output<string>;
    /**
     * A human friendly alias for `accountId`.
     */
    public readonly alias!: pulumi.Output<string | undefined>;
    /**
     * The cloud provider in which the account exists. Currently supported providers are `aws`, `gcp` and `azure`
     */
    public readonly cloudProvider!: pulumi.Output<string>;
    public /*out*/ readonly externalId!: pulumi.Output<string>;
    /**
     * Whether or not a role is provisioned withing this account, that Sysdig has permission to AssumeRole in order to run Benchmarks. Default: `false`.
     */
    public readonly roleEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * The name of the role Sysdig will have permission to AssumeRole if `roleEnaled` is set to `true`. Default: `SysdigCloudBench`.
     */
    public readonly roleName!: pulumi.Output<string | undefined>;

    /**
     * Create a CloudAccount resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CloudAccountArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CloudAccountArgs | CloudAccountState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CloudAccountState | undefined;
            inputs["accountId"] = state ? state.accountId : undefined;
            inputs["alias"] = state ? state.alias : undefined;
            inputs["cloudProvider"] = state ? state.cloudProvider : undefined;
            inputs["externalId"] = state ? state.externalId : undefined;
            inputs["roleEnabled"] = state ? state.roleEnabled : undefined;
            inputs["roleName"] = state ? state.roleName : undefined;
        } else {
            const args = argsOrState as CloudAccountArgs | undefined;
            if ((!args || args.accountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountId'");
            }
            if ((!args || args.cloudProvider === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cloudProvider'");
            }
            inputs["accountId"] = args ? args.accountId : undefined;
            inputs["alias"] = args ? args.alias : undefined;
            inputs["cloudProvider"] = args ? args.cloudProvider : undefined;
            inputs["roleEnabled"] = args ? args.roleEnabled : undefined;
            inputs["roleName"] = args ? args.roleName : undefined;
            inputs["externalId"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(CloudAccount.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CloudAccount resources.
 */
export interface CloudAccountState {
    /**
     * The unique identifier of the cloud account. e.g. for AWS: `123456789012`,
     */
    accountId?: pulumi.Input<string>;
    /**
     * A human friendly alias for `accountId`.
     */
    alias?: pulumi.Input<string>;
    /**
     * The cloud provider in which the account exists. Currently supported providers are `aws`, `gcp` and `azure`
     */
    cloudProvider?: pulumi.Input<string>;
    externalId?: pulumi.Input<string>;
    /**
     * Whether or not a role is provisioned withing this account, that Sysdig has permission to AssumeRole in order to run Benchmarks. Default: `false`.
     */
    roleEnabled?: pulumi.Input<boolean>;
    /**
     * The name of the role Sysdig will have permission to AssumeRole if `roleEnaled` is set to `true`. Default: `SysdigCloudBench`.
     */
    roleName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CloudAccount resource.
 */
export interface CloudAccountArgs {
    /**
     * The unique identifier of the cloud account. e.g. for AWS: `123456789012`,
     */
    accountId: pulumi.Input<string>;
    /**
     * A human friendly alias for `accountId`.
     */
    alias?: pulumi.Input<string>;
    /**
     * The cloud provider in which the account exists. Currently supported providers are `aws`, `gcp` and `azure`
     */
    cloudProvider: pulumi.Input<string>;
    /**
     * Whether or not a role is provisioned withing this account, that Sysdig has permission to AssumeRole in order to run Benchmarks. Default: `false`.
     */
    roleEnabled?: pulumi.Input<boolean>;
    /**
     * The name of the role Sysdig will have permission to AssumeRole if `roleEnaled` is set to `true`. Default: `SysdigCloudBench`.
     */
    roleName?: pulumi.Input<string>;
}
