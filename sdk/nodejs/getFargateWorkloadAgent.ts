// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getFargateWorkloadAgent(args: GetFargateWorkloadAgentArgs, opts?: pulumi.InvokeOptions): Promise<GetFargateWorkloadAgentResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("sysdig:index/getFargateWorkloadAgent:GetFargateWorkloadAgent", {
        "collectorHost": args.collectorHost,
        "collectorPort": args.collectorPort,
        "containerDefinitions": args.containerDefinitions,
        "imageAuthSecret": args.imageAuthSecret,
        "orchestratorHost": args.orchestratorHost,
        "orchestratorPort": args.orchestratorPort,
        "sysdigAccessKey": args.sysdigAccessKey,
        "workloadAgentImage": args.workloadAgentImage,
    }, opts);
}

/**
 * A collection of arguments for invoking GetFargateWorkloadAgent.
 */
export interface GetFargateWorkloadAgentArgs {
    /**
     * The collector host to connect to.
     */
    collectorHost?: string;
    /**
     * The collector port to connect to.
     */
    collectorPort?: string;
    /**
     * The input Fargate container definitions to instrument with the Sysdig workload agent.
     */
    containerDefinitions: string;
    /**
     * The registry authentication secret.
     */
    imageAuthSecret?: string;
    /**
     * The orchestrator host to connect to.
     */
    orchestratorHost?: string;
    /**
     * The orchestrator port to connect to.
     */
    orchestratorPort?: string;
    /**
     * The Sysdig Access Key (Agent token).
     */
    sysdigAccessKey: string;
    /**
     * The Sysdig workload agent image.
     */
    workloadAgentImage: string;
}

/**
 * A collection of values returned by GetFargateWorkloadAgent.
 */
export interface GetFargateWorkloadAgentResult {
    readonly collectorHost?: string;
    readonly collectorPort?: string;
    readonly containerDefinitions: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly imageAuthSecret?: string;
    readonly orchestratorHost?: string;
    readonly orchestratorPort?: string;
    /**
     * The updated container definitions instrumented with the Sysdig workload agent.
     */
    readonly outputContainerDefinitions: string;
    readonly sysdigAccessKey: string;
    readonly workloadAgentImage: string;
}

export function getFargateWorkloadAgentOutput(args: GetFargateWorkloadAgentOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFargateWorkloadAgentResult> {
    return pulumi.output(args).apply(a => getFargateWorkloadAgent(a, opts))
}

/**
 * A collection of arguments for invoking GetFargateWorkloadAgent.
 */
export interface GetFargateWorkloadAgentOutputArgs {
    /**
     * The collector host to connect to.
     */
    collectorHost?: pulumi.Input<string>;
    /**
     * The collector port to connect to.
     */
    collectorPort?: pulumi.Input<string>;
    /**
     * The input Fargate container definitions to instrument with the Sysdig workload agent.
     */
    containerDefinitions: pulumi.Input<string>;
    /**
     * The registry authentication secret.
     */
    imageAuthSecret?: pulumi.Input<string>;
    /**
     * The orchestrator host to connect to.
     */
    orchestratorHost?: pulumi.Input<string>;
    /**
     * The orchestrator port to connect to.
     */
    orchestratorPort?: pulumi.Input<string>;
    /**
     * The Sysdig Access Key (Agent token).
     */
    sysdigAccessKey: pulumi.Input<string>;
    /**
     * The Sysdig workload agent image.
     */
    workloadAgentImage: pulumi.Input<string>;
}
