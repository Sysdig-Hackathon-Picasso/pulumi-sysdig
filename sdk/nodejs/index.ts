// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

// Export members:
export * from "./getCurrentUser";
export * from "./getFargateWorkloadAgent";
export * from "./getUser";
export * from "./provider";
export * from "./user";

// Export sub-modules:
import * as config from "./config";
import * as monitor from "./monitor";
import * as secure from "./secure";
import * as types from "./types";

export {
    config,
    monitor,
    secure,
    types,
};

// Import resources to register:
import { User } from "./user";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "sysdig:index/user:User":
                return new User(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("sysdig", "index/user", _module)

import { Provider } from "./provider";

pulumi.runtime.registerResourcePackage("sysdig", {
    version: utilities.getVersion(),
    constructProvider: (name: string, type: string, urn: string): pulumi.ProviderResource => {
        if (type !== "pulumi:providers:sysdig") {
            throw new Error(`unknown provider type ${type}`);
        }
        return new Provider(name, <any>undefined, { urn });
    },
});
