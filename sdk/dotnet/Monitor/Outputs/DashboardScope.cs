// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sysdig.Monitor.Outputs
{

    [OutputType]
    public sealed class DashboardScope
    {
        /// <summary>
        /// Operator to relate the metric with some value. It is only required if the value to filter by is set, or the variable field is not set. Valid values are: `in`, `notIn`, `equals`, `notEquals`, `contains`, `notContains` and `startsWith`.
        /// </summary>
        public readonly string? Comparator;
        /// <summary>
        /// Metric to scope by, common examples are `host.hostName`, `kubernetes.namespace.name` or `kubernetes.cluster.name`, but you can use all the Sysdig-supported values shown in the UI. Note that kubernetes-related values only appear when Sysdig detects Kubernetes metadata.
        /// </summary>
        public readonly string Metric;
        /// <summary>
        /// List of values to filter by, if comparator is set. If the comparator is not `in` or `notIn` the list must contain only 1 value.
        /// </summary>
        public readonly ImmutableArray<string> Values;
        /// <summary>
        /// Assigns this metric to a value name and allows PromQL to reference it.
        /// </summary>
        public readonly string? Variable;

        [OutputConstructor]
        private DashboardScope(
            string? comparator,

            string metric,

            ImmutableArray<string> values,

            string? variable)
        {
            Comparator = comparator;
            Metric = metric;
            Values = values;
            Variable = variable;
        }
    }
}
