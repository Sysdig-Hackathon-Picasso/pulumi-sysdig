// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sysdig.Secure
{
    public static class NotificationChannel
    {
        public static Task<NotificationChannelResult> InvokeAsync(NotificationChannelArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<NotificationChannelResult>("sysdig:Secure/notificationChannel:NotificationChannel", args ?? new NotificationChannelArgs(), options.WithVersion());
    }


    public sealed class NotificationChannelArgs : Pulumi.InvokeArgs
    {
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public NotificationChannelArgs()
        {
        }
    }


    [OutputType]
    public sealed class NotificationChannelResult
    {
        public readonly string Account;
        public readonly string ApiKey;
        public readonly string Channel;
        public readonly bool Enabled;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        public readonly bool NotifyWhenOk;
        public readonly bool NotifyWhenResolved;
        public readonly string Recipients;
        public readonly string RoutingKey;
        public readonly bool SendTestNotification;
        public readonly string ServiceKey;
        public readonly string ServiceName;
        public readonly string Topics;
        public readonly string Type;
        public readonly string Url;
        public readonly int Version;

        [OutputConstructor]
        private NotificationChannelResult(
            string account,

            string apiKey,

            string channel,

            bool enabled,

            string id,

            string name,

            bool notifyWhenOk,

            bool notifyWhenResolved,

            string recipients,

            string routingKey,

            bool sendTestNotification,

            string serviceKey,

            string serviceName,

            string topics,

            string type,

            string url,

            int version)
        {
            Account = account;
            ApiKey = apiKey;
            Channel = channel;
            Enabled = enabled;
            Id = id;
            Name = name;
            NotifyWhenOk = notifyWhenOk;
            NotifyWhenResolved = notifyWhenResolved;
            Recipients = recipients;
            RoutingKey = routingKey;
            SendTestNotification = sendTestNotification;
            ServiceKey = serviceKey;
            ServiceName = serviceName;
            Topics = topics;
            Type = type;
            Url = url;
            Version = version;
        }
    }
}
