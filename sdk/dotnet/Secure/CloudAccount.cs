// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sysdig.Secure
{
    /// <summary>
    /// ## Import
    /// 
    /// Secure Cloud Accounts can be imported using the `account_id`, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import sysdig:Secure/cloudAccount:CloudAccount sample 123456789012
    /// ```
    /// </summary>
    [SysdigResourceType("sysdig:Secure/cloudAccount:CloudAccount")]
    public partial class CloudAccount : Pulumi.CustomResource
    {
        /// <summary>
        /// The unique identifier of the cloud account. e.g. for AWS: `123456789012`,
        /// </summary>
        [Output("accountId")]
        public Output<string> AccountId { get; private set; } = null!;

        /// <summary>
        /// A human friendly alias for `account_id`.
        /// </summary>
        [Output("alias")]
        public Output<string?> Alias { get; private set; } = null!;

        /// <summary>
        /// The cloud provider in which the account exists. Currently supported providers are `aws`, `gcp` and `azure`
        /// </summary>
        [Output("cloudProvider")]
        public Output<string> CloudProvider { get; private set; } = null!;

        [Output("externalId")]
        public Output<string> ExternalId { get; private set; } = null!;

        /// <summary>
        /// Whether or not a role is provisioned withing this account, that Sysdig has permission to AssumeRole in order to run Benchmarks. Default: `false`.
        /// </summary>
        [Output("roleEnabled")]
        public Output<bool?> RoleEnabled { get; private set; } = null!;

        /// <summary>
        /// The name of the role Sysdig will have permission to AssumeRole if `role_enaled` is set to `true`. Default: `SysdigCloudBench`.
        /// </summary>
        [Output("roleName")]
        public Output<string?> RoleName { get; private set; } = null!;


        /// <summary>
        /// Create a CloudAccount resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CloudAccount(string name, CloudAccountArgs args, CustomResourceOptions? options = null)
            : base("sysdig:Secure/cloudAccount:CloudAccount", name, args ?? new CloudAccountArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CloudAccount(string name, Input<string> id, CloudAccountState? state = null, CustomResourceOptions? options = null)
            : base("sysdig:Secure/cloudAccount:CloudAccount", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CloudAccount resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CloudAccount Get(string name, Input<string> id, CloudAccountState? state = null, CustomResourceOptions? options = null)
        {
            return new CloudAccount(name, id, state, options);
        }
    }

    public sealed class CloudAccountArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The unique identifier of the cloud account. e.g. for AWS: `123456789012`,
        /// </summary>
        [Input("accountId", required: true)]
        public Input<string> AccountId { get; set; } = null!;

        /// <summary>
        /// A human friendly alias for `account_id`.
        /// </summary>
        [Input("alias")]
        public Input<string>? Alias { get; set; }

        /// <summary>
        /// The cloud provider in which the account exists. Currently supported providers are `aws`, `gcp` and `azure`
        /// </summary>
        [Input("cloudProvider", required: true)]
        public Input<string> CloudProvider { get; set; } = null!;

        /// <summary>
        /// Whether or not a role is provisioned withing this account, that Sysdig has permission to AssumeRole in order to run Benchmarks. Default: `false`.
        /// </summary>
        [Input("roleEnabled")]
        public Input<bool>? RoleEnabled { get; set; }

        /// <summary>
        /// The name of the role Sysdig will have permission to AssumeRole if `role_enaled` is set to `true`. Default: `SysdigCloudBench`.
        /// </summary>
        [Input("roleName")]
        public Input<string>? RoleName { get; set; }

        public CloudAccountArgs()
        {
        }
    }

    public sealed class CloudAccountState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The unique identifier of the cloud account. e.g. for AWS: `123456789012`,
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// A human friendly alias for `account_id`.
        /// </summary>
        [Input("alias")]
        public Input<string>? Alias { get; set; }

        /// <summary>
        /// The cloud provider in which the account exists. Currently supported providers are `aws`, `gcp` and `azure`
        /// </summary>
        [Input("cloudProvider")]
        public Input<string>? CloudProvider { get; set; }

        [Input("externalId")]
        public Input<string>? ExternalId { get; set; }

        /// <summary>
        /// Whether or not a role is provisioned withing this account, that Sysdig has permission to AssumeRole in order to run Benchmarks. Default: `false`.
        /// </summary>
        [Input("roleEnabled")]
        public Input<bool>? RoleEnabled { get; set; }

        /// <summary>
        /// The name of the role Sysdig will have permission to AssumeRole if `role_enaled` is set to `true`. Default: `SysdigCloudBench`.
        /// </summary>
        [Input("roleName")]
        public Input<string>? RoleName { get; set; }

        public CloudAccountState()
        {
        }
    }
}
