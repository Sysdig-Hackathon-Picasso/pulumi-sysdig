// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sysdig.Secure
{
    [SysdigResourceType("sysdig:Secure/ruleNetwork:RuleNetwork")]
    public partial class RuleNetwork : Pulumi.CustomResource
    {
        [Output("blockInbound")]
        public Output<bool> BlockInbound { get; private set; } = null!;

        [Output("blockOutbound")]
        public Output<bool> BlockOutbound { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableArray<string>> Tags { get; private set; } = null!;

        [Output("tcps")]
        public Output<ImmutableArray<Outputs.RuleNetworkTcp>> Tcps { get; private set; } = null!;

        [Output("udps")]
        public Output<ImmutableArray<Outputs.RuleNetworkUdp>> Udps { get; private set; } = null!;

        [Output("version")]
        public Output<int> Version { get; private set; } = null!;


        /// <summary>
        /// Create a RuleNetwork resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RuleNetwork(string name, RuleNetworkArgs args, CustomResourceOptions? options = null)
            : base("sysdig:Secure/ruleNetwork:RuleNetwork", name, args ?? new RuleNetworkArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RuleNetwork(string name, Input<string> id, RuleNetworkState? state = null, CustomResourceOptions? options = null)
            : base("sysdig:Secure/ruleNetwork:RuleNetwork", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RuleNetwork resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RuleNetwork Get(string name, Input<string> id, RuleNetworkState? state = null, CustomResourceOptions? options = null)
        {
            return new RuleNetwork(name, id, state, options);
        }
    }

    public sealed class RuleNetworkArgs : Pulumi.ResourceArgs
    {
        [Input("blockInbound", required: true)]
        public Input<bool> BlockInbound { get; set; } = null!;

        [Input("blockOutbound", required: true)]
        public Input<bool> BlockOutbound { get; set; } = null!;

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        [Input("tcps")]
        private InputList<Inputs.RuleNetworkTcpArgs>? _tcps;
        public InputList<Inputs.RuleNetworkTcpArgs> Tcps
        {
            get => _tcps ?? (_tcps = new InputList<Inputs.RuleNetworkTcpArgs>());
            set => _tcps = value;
        }

        [Input("udps")]
        private InputList<Inputs.RuleNetworkUdpArgs>? _udps;
        public InputList<Inputs.RuleNetworkUdpArgs> Udps
        {
            get => _udps ?? (_udps = new InputList<Inputs.RuleNetworkUdpArgs>());
            set => _udps = value;
        }

        public RuleNetworkArgs()
        {
        }
    }

    public sealed class RuleNetworkState : Pulumi.ResourceArgs
    {
        [Input("blockInbound")]
        public Input<bool>? BlockInbound { get; set; }

        [Input("blockOutbound")]
        public Input<bool>? BlockOutbound { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        [Input("tcps")]
        private InputList<Inputs.RuleNetworkTcpGetArgs>? _tcps;
        public InputList<Inputs.RuleNetworkTcpGetArgs> Tcps
        {
            get => _tcps ?? (_tcps = new InputList<Inputs.RuleNetworkTcpGetArgs>());
            set => _tcps = value;
        }

        [Input("udps")]
        private InputList<Inputs.RuleNetworkUdpGetArgs>? _udps;
        public InputList<Inputs.RuleNetworkUdpGetArgs> Udps
        {
            get => _udps ?? (_udps = new InputList<Inputs.RuleNetworkUdpGetArgs>());
            set => _udps = value;
        }

        [Input("version")]
        public Input<int>? Version { get; set; }

        public RuleNetworkState()
        {
        }
    }
}
