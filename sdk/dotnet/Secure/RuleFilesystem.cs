// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sysdig.Secure
{
    [SysdigResourceType("sysdig:Secure/ruleFilesystem:RuleFilesystem")]
    public partial class RuleFilesystem : Pulumi.CustomResource
    {
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("readOnlies")]
        public Output<ImmutableArray<Outputs.RuleFilesystemReadOnly>> ReadOnlies { get; private set; } = null!;

        [Output("readWrites")]
        public Output<ImmutableArray<Outputs.RuleFilesystemReadWrite>> ReadWrites { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableArray<string>> Tags { get; private set; } = null!;

        [Output("version")]
        public Output<int> Version { get; private set; } = null!;


        /// <summary>
        /// Create a RuleFilesystem resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RuleFilesystem(string name, RuleFilesystemArgs? args = null, CustomResourceOptions? options = null)
            : base("sysdig:Secure/ruleFilesystem:RuleFilesystem", name, args ?? new RuleFilesystemArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RuleFilesystem(string name, Input<string> id, RuleFilesystemState? state = null, CustomResourceOptions? options = null)
            : base("sysdig:Secure/ruleFilesystem:RuleFilesystem", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RuleFilesystem resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RuleFilesystem Get(string name, Input<string> id, RuleFilesystemState? state = null, CustomResourceOptions? options = null)
        {
            return new RuleFilesystem(name, id, state, options);
        }
    }

    public sealed class RuleFilesystemArgs : Pulumi.ResourceArgs
    {
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("readOnlies")]
        private InputList<Inputs.RuleFilesystemReadOnlyArgs>? _readOnlies;
        public InputList<Inputs.RuleFilesystemReadOnlyArgs> ReadOnlies
        {
            get => _readOnlies ?? (_readOnlies = new InputList<Inputs.RuleFilesystemReadOnlyArgs>());
            set => _readOnlies = value;
        }

        [Input("readWrites")]
        private InputList<Inputs.RuleFilesystemReadWriteArgs>? _readWrites;
        public InputList<Inputs.RuleFilesystemReadWriteArgs> ReadWrites
        {
            get => _readWrites ?? (_readWrites = new InputList<Inputs.RuleFilesystemReadWriteArgs>());
            set => _readWrites = value;
        }

        [Input("tags")]
        private InputList<string>? _tags;
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        public RuleFilesystemArgs()
        {
        }
    }

    public sealed class RuleFilesystemState : Pulumi.ResourceArgs
    {
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("readOnlies")]
        private InputList<Inputs.RuleFilesystemReadOnlyGetArgs>? _readOnlies;
        public InputList<Inputs.RuleFilesystemReadOnlyGetArgs> ReadOnlies
        {
            get => _readOnlies ?? (_readOnlies = new InputList<Inputs.RuleFilesystemReadOnlyGetArgs>());
            set => _readOnlies = value;
        }

        [Input("readWrites")]
        private InputList<Inputs.RuleFilesystemReadWriteGetArgs>? _readWrites;
        public InputList<Inputs.RuleFilesystemReadWriteGetArgs> ReadWrites
        {
            get => _readWrites ?? (_readWrites = new InputList<Inputs.RuleFilesystemReadWriteGetArgs>());
            set => _readWrites = value;
        }

        [Input("tags")]
        private InputList<string>? _tags;
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        [Input("version")]
        public Input<int>? Version { get; set; }

        public RuleFilesystemState()
        {
        }
    }
}
