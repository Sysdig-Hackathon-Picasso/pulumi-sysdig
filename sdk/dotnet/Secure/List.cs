// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sysdig.Secure
{
    /// <summary>
    /// ## Import
    /// 
    /// Secure lists can be imported using the ID, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import sysdig:Secure/list:List example 12345
    /// ```
    /// </summary>
    [SysdigResourceType("sysdig:Secure/list:List")]
    public partial class List : Pulumi.CustomResource
    {
        /// <summary>
        /// Adds these elements to an existing list. Used to extend existing lists provided by Sysdig.
        /// The rules can only be extended once, for example if there is an existing list called "foo", one can have another
        /// append rule called "foo" but not a second one. By default this is false.
        /// </summary>
        [Output("append")]
        public Output<bool?> Append { get; private set; } = null!;

        /// <summary>
        /// Elements in the list. Elements can be another lists.
        /// </summary>
        [Output("items")]
        public Output<ImmutableArray<string>> Items { get; private set; } = null!;

        /// <summary>
        /// The name of the Secure list. It must be unique if it's not in append mode.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("version")]
        public Output<int> Version { get; private set; } = null!;


        /// <summary>
        /// Create a List resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public List(string name, ListArgs args, CustomResourceOptions? options = null)
            : base("sysdig:Secure/list:List", name, args ?? new ListArgs(), MakeResourceOptions(options, ""))
        {
        }

        private List(string name, Input<string> id, ListState? state = null, CustomResourceOptions? options = null)
            : base("sysdig:Secure/list:List", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing List resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static List Get(string name, Input<string> id, ListState? state = null, CustomResourceOptions? options = null)
        {
            return new List(name, id, state, options);
        }
    }

    public sealed class ListArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Adds these elements to an existing list. Used to extend existing lists provided by Sysdig.
        /// The rules can only be extended once, for example if there is an existing list called "foo", one can have another
        /// append rule called "foo" but not a second one. By default this is false.
        /// </summary>
        [Input("append")]
        public Input<bool>? Append { get; set; }

        [Input("items", required: true)]
        private InputList<string>? _items;

        /// <summary>
        /// Elements in the list. Elements can be another lists.
        /// </summary>
        public InputList<string> Items
        {
            get => _items ?? (_items = new InputList<string>());
            set => _items = value;
        }

        /// <summary>
        /// The name of the Secure list. It must be unique if it's not in append mode.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public ListArgs()
        {
        }
    }

    public sealed class ListState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Adds these elements to an existing list. Used to extend existing lists provided by Sysdig.
        /// The rules can only be extended once, for example if there is an existing list called "foo", one can have another
        /// append rule called "foo" but not a second one. By default this is false.
        /// </summary>
        [Input("append")]
        public Input<bool>? Append { get; set; }

        [Input("items")]
        private InputList<string>? _items;

        /// <summary>
        /// Elements in the list. Elements can be another lists.
        /// </summary>
        public InputList<string> Items
        {
            get => _items ?? (_items = new InputList<string>());
            set => _items = value;
        }

        /// <summary>
        /// The name of the Secure list. It must be unique if it's not in append mode.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("version")]
        public Input<int>? Version { get; set; }

        public ListState()
        {
        }
    }
}
