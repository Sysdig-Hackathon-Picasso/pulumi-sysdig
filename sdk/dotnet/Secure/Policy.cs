// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sysdig.Secure
{
    [SysdigResourceType("sysdig:Secure/policy:Policy")]
    public partial class Policy : Pulumi.CustomResource
    {
        [Output("actions")]
        public Output<ImmutableArray<Outputs.PolicyAction>> Actions { get; private set; } = null!;

        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        [Output("enabled")]
        public Output<bool?> Enabled { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("notificationChannels")]
        public Output<ImmutableArray<int>> NotificationChannels { get; private set; } = null!;

        [Output("ruleNames")]
        public Output<ImmutableArray<string>> RuleNames { get; private set; } = null!;

        [Output("scope")]
        public Output<string?> Scope { get; private set; } = null!;

        [Output("severity")]
        public Output<int?> Severity { get; private set; } = null!;

        [Output("type")]
        public Output<string?> Type { get; private set; } = null!;

        [Output("version")]
        public Output<int> Version { get; private set; } = null!;


        /// <summary>
        /// Create a Policy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Policy(string name, PolicyArgs args, CustomResourceOptions? options = null)
            : base("sysdig:Secure/policy:Policy", name, args ?? new PolicyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Policy(string name, Input<string> id, PolicyState? state = null, CustomResourceOptions? options = null)
            : base("sysdig:Secure/policy:Policy", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Policy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Policy Get(string name, Input<string> id, PolicyState? state = null, CustomResourceOptions? options = null)
        {
            return new Policy(name, id, state, options);
        }
    }

    public sealed class PolicyArgs : Pulumi.ResourceArgs
    {
        [Input("actions")]
        private InputList<Inputs.PolicyActionArgs>? _actions;
        public InputList<Inputs.PolicyActionArgs> Actions
        {
            get => _actions ?? (_actions = new InputList<Inputs.PolicyActionArgs>());
            set => _actions = value;
        }

        [Input("description", required: true)]
        public Input<string> Description { get; set; } = null!;

        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("notificationChannels")]
        private InputList<int>? _notificationChannels;
        public InputList<int> NotificationChannels
        {
            get => _notificationChannels ?? (_notificationChannels = new InputList<int>());
            set => _notificationChannels = value;
        }

        [Input("ruleNames")]
        private InputList<string>? _ruleNames;
        public InputList<string> RuleNames
        {
            get => _ruleNames ?? (_ruleNames = new InputList<string>());
            set => _ruleNames = value;
        }

        [Input("scope")]
        public Input<string>? Scope { get; set; }

        [Input("severity")]
        public Input<int>? Severity { get; set; }

        [Input("type")]
        public Input<string>? Type { get; set; }

        public PolicyArgs()
        {
        }
    }

    public sealed class PolicyState : Pulumi.ResourceArgs
    {
        [Input("actions")]
        private InputList<Inputs.PolicyActionGetArgs>? _actions;
        public InputList<Inputs.PolicyActionGetArgs> Actions
        {
            get => _actions ?? (_actions = new InputList<Inputs.PolicyActionGetArgs>());
            set => _actions = value;
        }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("notificationChannels")]
        private InputList<int>? _notificationChannels;
        public InputList<int> NotificationChannels
        {
            get => _notificationChannels ?? (_notificationChannels = new InputList<int>());
            set => _notificationChannels = value;
        }

        [Input("ruleNames")]
        private InputList<string>? _ruleNames;
        public InputList<string> RuleNames
        {
            get => _ruleNames ?? (_ruleNames = new InputList<string>());
            set => _ruleNames = value;
        }

        [Input("scope")]
        public Input<string>? Scope { get; set; }

        [Input("severity")]
        public Input<int>? Severity { get; set; }

        [Input("type")]
        public Input<string>? Type { get; set; }

        [Input("version")]
        public Input<int>? Version { get; set; }

        public PolicyState()
        {
        }
    }
}
