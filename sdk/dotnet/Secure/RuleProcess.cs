// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Sysdig.Secure
{
    /// <summary>
    /// ## Import
    /// 
    /// Secure process runtime rules can be imported using the ID, e.g.
    /// 
    /// ```sh
    ///  $ pulumi import sysdig:Secure/ruleProcess:RuleProcess example 12345
    /// ```
    /// </summary>
    [SysdigResourceType("sysdig:Secure/ruleProcess:RuleProcess")]
    public partial class RuleProcess : Pulumi.CustomResource
    {
        /// <summary>
        /// The description of Secure rule. By default is empty.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Defines if the process name matches or not with the provided list. Default is true.
        /// </summary>
        [Output("matching")]
        public Output<bool?> Matching { get; private set; } = null!;

        /// <summary>
        /// The name of the Secure rule. It must be unique.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// List of processes to match.
        /// </summary>
        [Output("processes")]
        public Output<ImmutableArray<string>> Processes { get; private set; } = null!;

        /// <summary>
        /// A list of tags for this rule.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<string>> Tags { get; private set; } = null!;

        /// <summary>
        /// Current version of the resource in Sysdig Secure.
        /// </summary>
        [Output("version")]
        public Output<int> Version { get; private set; } = null!;


        /// <summary>
        /// Create a RuleProcess resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RuleProcess(string name, RuleProcessArgs? args = null, CustomResourceOptions? options = null)
            : base("sysdig:Secure/ruleProcess:RuleProcess", name, args ?? new RuleProcessArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RuleProcess(string name, Input<string> id, RuleProcessState? state = null, CustomResourceOptions? options = null)
            : base("sysdig:Secure/ruleProcess:RuleProcess", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RuleProcess resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RuleProcess Get(string name, Input<string> id, RuleProcessState? state = null, CustomResourceOptions? options = null)
        {
            return new RuleProcess(name, id, state, options);
        }
    }

    public sealed class RuleProcessArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of Secure rule. By default is empty.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Defines if the process name matches or not with the provided list. Default is true.
        /// </summary>
        [Input("matching")]
        public Input<bool>? Matching { get; set; }

        /// <summary>
        /// The name of the Secure rule. It must be unique.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("processes")]
        private InputList<string>? _processes;

        /// <summary>
        /// List of processes to match.
        /// </summary>
        public InputList<string> Processes
        {
            get => _processes ?? (_processes = new InputList<string>());
            set => _processes = value;
        }

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// A list of tags for this rule.
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        public RuleProcessArgs()
        {
        }
    }

    public sealed class RuleProcessState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The description of Secure rule. By default is empty.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Defines if the process name matches or not with the provided list. Default is true.
        /// </summary>
        [Input("matching")]
        public Input<bool>? Matching { get; set; }

        /// <summary>
        /// The name of the Secure rule. It must be unique.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("processes")]
        private InputList<string>? _processes;

        /// <summary>
        /// List of processes to match.
        /// </summary>
        public InputList<string> Processes
        {
            get => _processes ?? (_processes = new InputList<string>());
            set => _processes = value;
        }

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// A list of tags for this rule.
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Current version of the resource in Sysdig Secure.
        /// </summary>
        [Input("version")]
        public Input<int>? Version { get; set; }

        public RuleProcessState()
        {
        }
    }
}
