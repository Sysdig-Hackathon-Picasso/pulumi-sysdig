# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = ['ProviderArgs', 'Provider']

@pulumi.input_type
class ProviderArgs:
    def __init__(__self__, *,
                 extra_headers: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 sysdig_monitor_api_token: Optional[pulumi.Input[str]] = None,
                 sysdig_monitor_insecure_tls: Optional[pulumi.Input[bool]] = None,
                 sysdig_monitor_url: Optional[pulumi.Input[str]] = None,
                 sysdig_secure_api_token: Optional[pulumi.Input[str]] = None,
                 sysdig_secure_insecure_tls: Optional[pulumi.Input[bool]] = None,
                 sysdig_secure_url: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a Provider resource.
        """
        if extra_headers is not None:
            pulumi.set(__self__, "extra_headers", extra_headers)
        if sysdig_monitor_api_token is not None:
            pulumi.set(__self__, "sysdig_monitor_api_token", sysdig_monitor_api_token)
        if sysdig_monitor_insecure_tls is not None:
            pulumi.set(__self__, "sysdig_monitor_insecure_tls", sysdig_monitor_insecure_tls)
        if sysdig_monitor_url is not None:
            pulumi.set(__self__, "sysdig_monitor_url", sysdig_monitor_url)
        if sysdig_secure_api_token is not None:
            pulumi.set(__self__, "sysdig_secure_api_token", sysdig_secure_api_token)
        if sysdig_secure_insecure_tls is not None:
            pulumi.set(__self__, "sysdig_secure_insecure_tls", sysdig_secure_insecure_tls)
        if sysdig_secure_url is not None:
            pulumi.set(__self__, "sysdig_secure_url", sysdig_secure_url)

    @property
    @pulumi.getter(name="extraHeaders")
    def extra_headers(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]:
        return pulumi.get(self, "extra_headers")

    @extra_headers.setter
    def extra_headers(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]):
        pulumi.set(self, "extra_headers", value)

    @property
    @pulumi.getter(name="sysdigMonitorApiToken")
    def sysdig_monitor_api_token(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "sysdig_monitor_api_token")

    @sysdig_monitor_api_token.setter
    def sysdig_monitor_api_token(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "sysdig_monitor_api_token", value)

    @property
    @pulumi.getter(name="sysdigMonitorInsecureTls")
    def sysdig_monitor_insecure_tls(self) -> Optional[pulumi.Input[bool]]:
        return pulumi.get(self, "sysdig_monitor_insecure_tls")

    @sysdig_monitor_insecure_tls.setter
    def sysdig_monitor_insecure_tls(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "sysdig_monitor_insecure_tls", value)

    @property
    @pulumi.getter(name="sysdigMonitorUrl")
    def sysdig_monitor_url(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "sysdig_monitor_url")

    @sysdig_monitor_url.setter
    def sysdig_monitor_url(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "sysdig_monitor_url", value)

    @property
    @pulumi.getter(name="sysdigSecureApiToken")
    def sysdig_secure_api_token(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "sysdig_secure_api_token")

    @sysdig_secure_api_token.setter
    def sysdig_secure_api_token(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "sysdig_secure_api_token", value)

    @property
    @pulumi.getter(name="sysdigSecureInsecureTls")
    def sysdig_secure_insecure_tls(self) -> Optional[pulumi.Input[bool]]:
        return pulumi.get(self, "sysdig_secure_insecure_tls")

    @sysdig_secure_insecure_tls.setter
    def sysdig_secure_insecure_tls(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "sysdig_secure_insecure_tls", value)

    @property
    @pulumi.getter(name="sysdigSecureUrl")
    def sysdig_secure_url(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "sysdig_secure_url")

    @sysdig_secure_url.setter
    def sysdig_secure_url(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "sysdig_secure_url", value)


class Provider(pulumi.ProviderResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 extra_headers: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 sysdig_monitor_api_token: Optional[pulumi.Input[str]] = None,
                 sysdig_monitor_insecure_tls: Optional[pulumi.Input[bool]] = None,
                 sysdig_monitor_url: Optional[pulumi.Input[str]] = None,
                 sysdig_secure_api_token: Optional[pulumi.Input[str]] = None,
                 sysdig_secure_insecure_tls: Optional[pulumi.Input[bool]] = None,
                 sysdig_secure_url: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        The provider type for the sysdig package. By default, resources use package-wide configuration
        settings, however an explicit `Provider` instance may be created and passed during resource
        construction to achieve fine-grained programmatic control over provider settings. See the
        [documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[ProviderArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        The provider type for the sysdig package. By default, resources use package-wide configuration
        settings, however an explicit `Provider` instance may be created and passed during resource
        construction to achieve fine-grained programmatic control over provider settings. See the
        [documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.

        :param str resource_name: The name of the resource.
        :param ProviderArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(ProviderArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 extra_headers: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 sysdig_monitor_api_token: Optional[pulumi.Input[str]] = None,
                 sysdig_monitor_insecure_tls: Optional[pulumi.Input[bool]] = None,
                 sysdig_monitor_url: Optional[pulumi.Input[str]] = None,
                 sysdig_secure_api_token: Optional[pulumi.Input[str]] = None,
                 sysdig_secure_insecure_tls: Optional[pulumi.Input[bool]] = None,
                 sysdig_secure_url: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = _utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = ProviderArgs.__new__(ProviderArgs)

            __props__.__dict__["extra_headers"] = pulumi.Output.from_input(extra_headers).apply(pulumi.runtime.to_json) if extra_headers is not None else None
            __props__.__dict__["sysdig_monitor_api_token"] = sysdig_monitor_api_token
            __props__.__dict__["sysdig_monitor_insecure_tls"] = pulumi.Output.from_input(sysdig_monitor_insecure_tls).apply(pulumi.runtime.to_json) if sysdig_monitor_insecure_tls is not None else None
            __props__.__dict__["sysdig_monitor_url"] = sysdig_monitor_url
            __props__.__dict__["sysdig_secure_api_token"] = sysdig_secure_api_token
            __props__.__dict__["sysdig_secure_insecure_tls"] = pulumi.Output.from_input(sysdig_secure_insecure_tls).apply(pulumi.runtime.to_json) if sysdig_secure_insecure_tls is not None else None
            __props__.__dict__["sysdig_secure_url"] = sysdig_secure_url
        super(Provider, __self__).__init__(
            'sysdig',
            resource_name,
            __props__,
            opts)

    @property
    @pulumi.getter(name="sysdigMonitorApiToken")
    def sysdig_monitor_api_token(self) -> pulumi.Output[Optional[str]]:
        return pulumi.get(self, "sysdig_monitor_api_token")

    @property
    @pulumi.getter(name="sysdigMonitorUrl")
    def sysdig_monitor_url(self) -> pulumi.Output[Optional[str]]:
        return pulumi.get(self, "sysdig_monitor_url")

    @property
    @pulumi.getter(name="sysdigSecureApiToken")
    def sysdig_secure_api_token(self) -> pulumi.Output[Optional[str]]:
        return pulumi.get(self, "sysdig_secure_api_token")

    @property
    @pulumi.getter(name="sysdigSecureUrl")
    def sysdig_secure_url(self) -> pulumi.Output[Optional[str]]:
        return pulumi.get(self, "sysdig_secure_url")

